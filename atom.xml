<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuygfgg&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuygfgg.ml/"/>
  <updated>2020-05-10T12:54:12.485Z</updated>
  <id>https://yuygfgg.ml/</id>
  
  <author>
    <name>yuygfgg</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>题解 SP54 【JULKA - Julka】</title>
    <link href="https://yuygfgg.ml/2020/05/10/solution-sp54/"/>
    <id>https://yuygfgg.ml/2020/05/10/solution-sp54/</id>
    <published>2020-05-10T12:27:58.000Z</published>
    <updated>2020-05-10T12:54:12.485Z</updated>
    
    <content type="html"><![CDATA[<p>有十组数据，每次输出$(a+b)/2$和$(a-b)/2$即可</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(a+b)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;(a-b)/<span class="number">2</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1genmkjbutij305u05qmx7.jpg" alt="wa"></p><p>仔细一看：<strong>两数均为小于10^100的整数</strong></p><p>好吧，上高精</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//compare比较函数：相等返回0，大于返回1，小于返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(str1.length()&gt;str2.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(str1.length()&lt;str2.length())  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> str1.compare(str2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度加法</span></span><br><span class="line"><span class="comment">//只能是两个正数相加</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span><span class="comment">//高精度加法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="comment">//前面补0，弄成长度相同</span></span><br><span class="line">    <span class="keyword">if</span>(len1&lt;len2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len2-len1;i++)</span><br><span class="line">           str1=<span class="string">"0"</span>+str1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len1-len2;i++)</span><br><span class="line">           str2=<span class="string">"0"</span>+str2;</span><br><span class="line">    &#125;</span><br><span class="line">    len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=str1[i]-<span class="string">'0'</span>+str2[i]-<span class="string">'0'</span>+cf;</span><br><span class="line">        cf=temp/<span class="number">10</span>;</span><br><span class="line">        temp%=<span class="number">10</span>;</span><br><span class="line">        str=<span class="keyword">char</span>(temp+<span class="string">'0'</span>)+str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cf!=<span class="number">0</span>)  str=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+str;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度减法</span></span><br><span class="line"><span class="comment">//只能是两个正数相减，而且要大减小</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span><span class="comment">//高精度减法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> tmp=str1.length()-str2.length();</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=str2.length()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[tmp+i]&lt;str2[i]+cf)</span><br><span class="line">        &#123;</span><br><span class="line">            str=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>+<span class="number">10</span>)+str;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            str=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>)+str;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tmp<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i]-cf&gt;=<span class="string">'0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            str=<span class="keyword">char</span>(str1[i]-cf)+str;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            str=<span class="keyword">char</span>(str1[i]-cf+<span class="number">10</span>)+str;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    str.erase(<span class="number">0</span>,str.find_first_not_of(<span class="string">'0'</span>));<span class="comment">//去除结果中多余的前导0</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度乘法</span></span><br><span class="line"><span class="comment">//只能是两个正数相乘</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="built_in">string</span> tempstr;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        tempstr=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> temp=str2[i]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(temp!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len2<span class="number">-1</span>-i;j++)</span><br><span class="line">              tempstr+=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=len1<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                t=(temp*(str1[j]-<span class="string">'0'</span>)+cf)%<span class="number">10</span>;</span><br><span class="line">                cf=(temp*(str1[j]-<span class="string">'0'</span>)+cf)/<span class="number">10</span>;</span><br><span class="line">                tempstr=<span class="keyword">char</span>(t+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cf!=<span class="number">0</span>) tempstr=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">        &#125;</span><br><span class="line">        str=add(str,tempstr);</span><br><span class="line">    &#125;</span><br><span class="line">    str.erase(<span class="number">0</span>,str.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度除法</span></span><br><span class="line"><span class="comment">//两个正数相除，商为quotient,余数为residue</span></span><br><span class="line"><span class="comment">//需要高精度减法和乘法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2,<span class="built_in">string</span> &amp;quotient,<span class="built_in">string</span> &amp;residue)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    quotient=residue=<span class="string">""</span>;<span class="comment">//清空</span></span><br><span class="line">    <span class="keyword">if</span>(str2==<span class="string">"0"</span>)<span class="comment">//判断除数是否为0</span></span><br><span class="line">    &#123;</span><br><span class="line">        quotient=residue=<span class="string">"ERROR"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(str1==<span class="string">"0"</span>)<span class="comment">//判断被除数是否为0</span></span><br><span class="line">    &#123;</span><br><span class="line">        quotient=residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> res=compare(str1,str2);</span><br><span class="line">    <span class="keyword">if</span>(res&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        quotient=<span class="string">"0"</span>;</span><br><span class="line">        residue=str1;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(res==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        quotient=<span class="string">"1"</span>;</span><br><span class="line">        residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">        <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">        <span class="built_in">string</span> tempstr;</span><br><span class="line">        tempstr.append(str1,<span class="number">0</span>,len2<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&lt;len1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tempstr=tempstr+str1[i];</span><br><span class="line">            tempstr.erase(<span class="number">0</span>,tempstr.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">            <span class="keyword">if</span>(tempstr.empty())</span><br><span class="line">              tempstr=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">char</span> ch=<span class="string">'9'</span>;ch&gt;=<span class="string">'0'</span>;ch--)<span class="comment">//试商</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> str,tmp;</span><br><span class="line">                str=str+ch;</span><br><span class="line">                tmp=mul(str2,str);</span><br><span class="line">                <span class="keyword">if</span>(compare(tmp,tempstr)&lt;=<span class="number">0</span>)<span class="comment">//试商成功</span></span><br><span class="line">                &#123;</span><br><span class="line">                    quotient=quotient+ch;</span><br><span class="line">                    tempstr=sub(tempstr,tmp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        residue=tempstr;</span><br><span class="line">    &#125;</span><br><span class="line">    quotient.erase(<span class="number">0</span>,quotient.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">if</span>(quotient.empty()) quotient=<span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">string</span> a=<span class="string">""</span>,b=<span class="string">""</span>,ans=<span class="string">""</span>,r=<span class="string">""</span>;</span><br><span class="line">         <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">         div(add(a,b),<span class="string">"2"</span>,ans,r);</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">         div(sub(a,b),<span class="string">"2"</span>,ans,r);</span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>倒霉的C++党啊</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有十组数据，每次输出$(a+b)/2$和$(a-b)/2$即可&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF315B 【Sereja and Array】</title>
    <link href="https://yuygfgg.ml/2020/05/10/solution-cf315b/"/>
    <id>https://yuygfgg.ml/2020/05/10/solution-cf315b/</id>
    <published>2020-05-10T11:51:20.000Z</published>
    <updated>2020-05-10T12:53:57.009Z</updated>
    
    <content type="html"><![CDATA[<p>看到第一眼——线段树？？？</p><a id="more"></a><p><del>出于pj-</del> 我不会，只好直接打暴力</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.size();i++)&#123;</span><br><span class="line">        a[i]+=x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,x,op,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        a.push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[x<span class="number">-1</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            pls(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;k;</span><br><span class="line">            a[x<span class="number">-1</span>]=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>恭喜：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1genlcefdyyj312i0a6wex.jpg" alt="tle"></p><p>于是肯定要加一点优化，但我不会线段树，于是：</p><ul><li>经过简单观察，发现操作2号耗时最大，就想办法优化</li></ul><p>基本思路：由于是全数组而非部分+，可以用<code>pos</code>变量记录“调整量”，使得不需要每一次操作2都遍历一遍数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,x,op,k,pos=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        a.push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a[x<span class="number">-1</span>]+pos&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输出时加上“调整量”</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">            pos+=x;<span class="comment">//调整量增加</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;k;</span><br><span class="line">            a[x<span class="number">-1</span>]=k-pos;<span class="comment">//直接赋值，要取消调整量的影响，需要减去调整量，否则后面如果要输出是会多“当前的pos”</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到第一眼——线段树？？？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>chen_zhe ak ioi!</title>
    <link href="https://yuygfgg.ml/2020/05/05/cz-ak-ioi/"/>
    <id>https://yuygfgg.ml/2020/05/05/cz-ak-ioi/</id>
    <published>2020-05-05T13:52:25.000Z</published>
    <updated>2020-05-10T06:01:47.149Z</updated>
    
    <content type="html"><![CDATA[<p>学【老虎叫】语</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Chen Zhe AKs IOI.</span><br><span class="line">Chen Zhe AKed IOI.</span><br><span class="line">Chen Zhe will AK IOI.</span><br><span class="line">Chen Zhe would AK IOI.</span><br><span class="line">Chen Zhe is AKing IOI.</span><br><span class="line">Chen Zhe was AKing IOI.</span><br><span class="line">Chen Zhe will be AKing IOI.</span><br><span class="line">Chen Zhe would be AKing IOI.</span><br><span class="line">Chen Zhe has AKed IOI.</span><br><span class="line">Chen Zhe had AKed IOI.</span><br><span class="line">Chen Zhe will have AKed IOI.</span><br><span class="line">Chen Zhe would have AKed IOI.</span><br><span class="line">Chen Zhe has been AKing IOI.</span><br><span class="line">Chen Zhe had been AKing IOI.</span><br><span class="line">Chen Zhe will have been AKing IOI.</span><br><span class="line">Chen Zhe would have been AKing IOI.</span><br><span class="line">IOI is AKed by Chen Zhe.</span><br><span class="line">IOI was AKed by Chen Zhe.</span><br><span class="line">IOI will be AKed by Chen Zhe.</span><br><span class="line">IOI would be AKed by Chen Zhe.</span><br><span class="line">IOI is being AKed by Chen Zhe.</span><br><span class="line">IOI was being AKed by Chen Zhe.</span><br><span class="line">IOI will be being AKed by Chen Zhe.</span><br><span class="line">IOI would be being AKed by Chen Zhe.</span><br><span class="line">IOI has been AKed by Chen Zhe.</span><br><span class="line">IOI had been AKed by Chen Zhe.</span><br><span class="line">IOI will have been AKed by Chen Zhe.</span><br><span class="line">IOI would have been AKed by Chen Zhe.</span><br><span class="line">IOI has been being AKed by Chen Zhe.</span><br><span class="line">IOI had been being AKed by Chen Zhe.</span><br><span class="line">IOI will have been being AKed by Chen Zhe.</span><br><span class="line">IOI would have been being AKed by Chen Zhe.</span><br><span class="line">Chen Zhe can AK IOI.</span><br><span class="line">Chen Zhe could AK IOI.</span><br><span class="line">Chen Zhe must AK IOI.</span><br><span class="line">Chen Zhe has to AK IOI.</span><br><span class="line">Chen Zhe had to AK IOI.</span><br><span class="line">Chen Zhe will have to AK IOI.</span><br><span class="line">Chen Zhe would have to AK IOI.</span><br><span class="line">Chen Zhe has had to AK IOI.</span><br><span class="line">Chen Zhe had had to AK IOI.</span><br><span class="line">Chen Zhe will have had to AK IOI.</span><br><span class="line">Chen Zhe would have had to AK IOI.</span><br><span class="line">Chen Zhe need to AK IOI.</span><br><span class="line">Chen Zhe dares to AK IOI.</span><br><span class="line">Chen Zhe used to AK IOI.</span><br><span class="line">Chen Zhe is used to AKing IOI.</span><br><span class="line">Chen Zhe is bound to AK IOI.</span><br><span class="line">IOI can be AKed by Chen Zhe.</span><br><span class="line">IOI could be AKed by Chen Zhe.</span><br><span class="line">IOI must be AKed by IOI.</span><br><span class="line">IOI has to be AKed by Chen Zhe.</span><br><span class="line">IOI had to be AKed by Chen Zhe.</span><br><span class="line">IOI will have to be AKed by Chen Zhe.</span><br><span class="line">IOI would have to be AKed by Chen Zhe.</span><br><span class="line">IOI has had to be AKed by Chen Zhe.</span><br><span class="line">IOI had had to be AKed by Chen Zhe.</span><br><span class="line">IOI will have had to be AKed by Chen Zhe.</span><br><span class="line">IOI would have had to be AKed by Chen Zhe.</span><br><span class="line">IOI need to be AKed by Chen Zhe.</span><br><span class="line">IOI dares to be AKed by Chen Zhe.</span><br><span class="line">IOI used to be AKed by Chen Zhe.</span><br><span class="line">IOI is used to being AKed by Chen Zhe.</span><br><span class="line">IOI is bound to be AKed by Chen Zhe.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学【老虎叫】语&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="恶搞" scheme="https://yuygfgg.ml/tags/%E6%81%B6%E6%90%9E/"/>
    
  </entry>
  
  <entry>
    <title>洛谷管理真名</title>
    <link href="https://yuygfgg.ml/2020/05/04/LUOGU/"/>
    <id>https://yuygfgg.ml/2020/05/04/LUOGU/</id>
    <published>2020-05-04T07:23:35.000Z</published>
    <updated>2020-05-05T07:18:53.220Z</updated>
    
    <content type="html"><![CDATA[<p>专业人肉100年</p><a id="more"></a><p>kkksc03真名：汪楚奇 男 约1995</p><p>lin_toto真名：林方正 约1999</p><p>StudyingFather真名：张书豪 男 约2003</p><p>chen_zhe真名：陈哲 男 约2004</p><p>xht37真名：徐皓天 男 约2003</p><p>NaCly_Fish真名：李峻枫 男 约2002</p><p>zhouwc真名：周炜程 男 约2003</p><p>noip真名：李欣隆 男 2001.3.11</p><p>ComeIntoPower真名：袁方舟 男 约2001</p><p>CYJian真名：陈胤戬 男 约2003</p><p>FlierKing真名：周永隆 男 约2000</p><p>zcysky真名：周辰宇 男 约2001</p><p>soha真名：金少海 ? 约2000</p><p>darkflames真名：？ 约1990（?）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;专业人肉100年&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>macos下VScode的配置</title>
    <link href="https://yuygfgg.ml/2020/05/04/vscode-macos/"/>
    <id>https://yuygfgg.ml/2020/05/04/vscode-macos/</id>
    <published>2020-05-04T07:23:35.000Z</published>
    <updated>2020-05-11T13:09:40.081Z</updated>
    
    <content type="html"><![CDATA[<p>最近花了两天时间配置了一下VScode，这里简单记一下</p><a id="more"></a><h2 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h2><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="用coderunner插件"><a href="#用coderunner插件" class="headerlink" title="用coderunner插件"></a>用coderunner插件</h4><ul><li><p>点左边栏里<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotfu33ugj302601o0sk.jpg" alt="app">，在输入框搜索coderunner，安装，点左上即可运行</p></li><li><p>为了更好的输入，打开设置（按f1搜settings），搜索run in terminal，打上勾即可<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot2qhu5hj30ho03i3yr.jpg" alt="run in terminal"></p></li></ul><h4 id="用自带的运行"><a href="#用自带的运行" class="headerlink" title="用自带的运行"></a>用自带的运行</h4><ul><li>配置完调试后按ctrl（<strong>注意不是cmd</strong>）+F5</li></ul><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我不明白网上讲那么复杂干啥，不就是c,v嘛（（</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ul><li>在当前文件夹中新建一个叫.vscode的文件夹（不要在finder里建，直接在左边栏摁<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot289fe3j3016012web.jpg" alt="newfile">建）</li><li>在.vscode里建这些文件</li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot1su32vj30b8056jrq.jpg" alt="files"></p><ul><li><p>c_cpp_properties：<a href="https://www.luogu.com.cn/paste/2zlc21yf" target="_blank" rel="noopener">this</a></p></li><li><p>launch：<a href="https://www.luogu.com.cn/paste/drss6lff" target="_blank" rel="noopener">this</a></p></li><li><p>settings：<a href="https://www.luogu.com.cn/paste/a379qcz1" target="_blank" rel="noopener">this</a></p></li><li><p>tasks：<a href="https://www.luogu.com.cn/paste/67o4nuud" target="_blank" rel="noopener">this</a></p></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>安装c/c++、codelldb两个插件，方法同coderunner<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot3q5jj0j30ow032q3f.jpg" alt="codelldb"><br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot410yd1j30ow02ywez.jpg" alt="c/c++"></li></ul><p>然后就可以按F5调试啦～</p><h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><h4 id="编辑器与窗口管理"><a href="#编辑器与窗口管理" class="headerlink" title="编辑器与窗口管理"></a>编辑器与窗口管理</h4><ul><li>打开 cmd+O</li><li>新窗口 cmd+Shift+N</li><li>新标签页 cmd+N</li><li>关闭整个VSC窗口 cmd+Shift+W</li><li>关闭当前标签页 cmd+W</li><li>重新打开刚刚关闭的标签页 cmd+Shift+T</li><li>切换标签页 cmd+Tab</li><li>在前三个编辑器之间切换 cmd+1 2 3</li><li>将焦点编辑器移动位置  cmd+Alt+←→ 或 cmd+shift+[/]</li><li>在标签页之间切换 Alt+1~9</li></ul><h4 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h4><ul><li>搜索 cmd+F</li><li>替换 cmd+alt+f</li><li>复制光标所在行 只需双击当前行并按下cmd+C即可。</li><li>去掉行尾空格 cmd+K 然后 cmd+X</li><li>切换行注释(可多行) cmd+/</li><li>代码缩进 cmd+[ 或 cmd+]</li><li>当前行上下移动 Alt+↑↓</li><li>当前行后插入一行 cmd+Enter</li><li>当前行前插入一行 cmd+Shift+Enter</li><li>选中下个高亮的匹配项 cmd+D</li><li>多光标模式 Atl+鼠标单击即可在单击处创建新的光标</li><li>速览定义 Alt+F12</li><li>Zen模式 cmd+K 然后 cmd+Z</li></ul><h3 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h3><h4 id="需要插件："><a href="#需要插件：" class="headerlink" title="需要插件："></a>需要插件：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot4ixh1zj30oq03c0t6.jpg" alt="c++ intellisense"></h4><p>效果：</p><ul><li><p>函数预览 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot53igsyj3106072wft.jpg" alt="func"></p></li><li><p>大纲</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot0xujw6j30p21mgn1s.jpg" alt="ee"></p><ul><li>代码提示</li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosyqybvqj30ny0e80u6.jpg" alt="code"></p><h3 id="VSCODE-luogu"><a href="#VSCODE-luogu" class="headerlink" title="VSCODE luogu"></a>VSCODE luogu</h3><h4 id="需要插件"><a href="#需要插件" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotarpnkfj30om02qmxk.jpg" alt="vscode luogu"></h4><p>见<a href="https://github.com/yltx/vscode-luogu/wiki" target="_blank" rel="noopener">这里</a></p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><h4 id="需要插件-1"><a href="#需要插件-1" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotd9dfu2j30ok038t9c.jpg" alt="git"></h4><ul><li>集成git到VSCODE（本人是蒟蒻，还不怎么会用） <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosxhe36gj31hc0u01kx.jpg" alt="git"></li></ul><h3 id="markdown支持增强"><a href="#markdown支持增强" class="headerlink" title="markdown支持增强"></a>markdown支持增强</h3><h4 id="需要插件-2"><a href="#需要插件-2" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot5t3fpej30oq062ab7.jpg" alt="mds"></h4><ul><li>markdown预览、高亮 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosy9h606j31hc0u04qp.jpg" alt="md"><br><a href="https://www.luogu.com.cn/paste/7v6my3kn" target="_blank" rel="noopener">它对语法的检查非常严格，为了给大家参考，贡献本文的 <code>0err 0war</code> markdown源码</a></li></ul><h3 id="自定义代码片段"><a href="#自定义代码片段" class="headerlink" title="自定义代码片段"></a>自定义代码片段</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot680kv8j3176032jrj.jpg" alt="usr sn 1"> 然后按enter就出来了<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot6qc6p9j316g06uwf2.jpg" alt="usr sn 2"></p><h4 id="按F1搜索user-sn-按enter，选C-json，按enter编辑"><a href="#按F1搜索user-sn-按enter，选C-json，按enter编辑" class="headerlink" title="按F1搜索user sn  按enter，选C++.json，按enter编辑"></a>按F1搜索<code>user sn</code> <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot9ldpyyj30rw046t95.jpg" alt="usr sn search"> 按enter，选C++.json，按enter编辑</h4><p>e.g</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">     <span class="attr">"sc"</span>: &#123;</span><br><span class="line">        <span class="attr">"prefix"</span>: <span class="string">"sc"</span>,<span class="comment">//“召唤”键</span></span><br><span class="line">        <span class="attr">"body"</span>: [<span class="comment">//$(num)为光标路径，结尾必须有一个</span></span><br><span class="line">            <span class="string">"#include&lt;bits/stdc++.h&gt;"</span>,</span><br><span class="line">            <span class="string">"using namespace std;\n$1"</span>,</span><br><span class="line">            <span class="string">"int main()&#123;\n\t$2"</span>,</span><br><span class="line">            <span class="string">"&#125;"</span>,</span><br><span class="line">            <span class="string">"$3"</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"description"</span>: <span class="string">"start"</span><span class="comment">//描述</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>我装了这些插件，仅供参考</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geoszm4122j30om1aaak1.jpg" alt="vw"></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li><p>编辑<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot02bv5vj31hc0u0qsm.jpg" alt="edit"></p></li><li><p>调试<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot0h32nyj31hc0u0kb0.jpg" alt="debug"></p></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://blog.csdn.net/justidle/article/details/105157419" target="_blank" rel="noopener">https://blog.csdn.net/justidle/article/details/105157419</a></p></li><li><p><a href="https://www.luogu.com.cn/blog/crab-in-northeast/great-features-and-plugins-for-vscode" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/crab-in-northeast/great-features-and-plugins-for-vscode</a></p></li><li><p><a href="https://www.luogu.com.cn/blog/GNAQ/VSC-guide" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/GNAQ/VSC-guide</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近花了两天时间配置了一下VScode，这里简单记一下&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="工具" scheme="https://yuygfgg.ml/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF903C 【Boxes Packing】</title>
    <link href="https://yuygfgg.ml/2020/05/04/solution-cf903c/"/>
    <id>https://yuygfgg.ml/2020/05/04/solution-cf903c/</id>
    <published>2020-05-04T02:08:28.000Z</published>
    <updated>2020-05-04T02:11:07.455Z</updated>
    
    <content type="html"><![CDATA[<p>思路：求有几个上升序列，每一个都要尽量长</p><a id="more"></a><p>step1:用multiset排序</p><p>step2-1:如果没有相同的元素，上升序列数为1</p><p>step2-2:有x个元素相同，则结论就是max(x)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans=<span class="number">1</span>,sum=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    a.insert(<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">        a.insert(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=a.begin();</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it2=it;</span><br><span class="line">    it++;</span><br><span class="line">    <span class="keyword">for</span>(;it!=a.end();it++,it2++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(*it2==*it)&#123;</span><br><span class="line">            sum++;</span><br><span class="line">            ans=max(ans,sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> sum=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：求有几个上升序列，每一个都要尽量长&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF490A 【Team Olympiad】</title>
    <link href="https://yuygfgg.ml/2020/04/23/solution-CF490a%20/"/>
    <id>https://yuygfgg.ml/2020/04/23/solution-CF490a%20/</id>
    <published>2020-04-23T12:35:30.000Z</published>
    <updated>2020-05-02T02:40:32.408Z</updated>
    
    <content type="html"><![CDATA[<p>思路：输入x，就在对应的桶+1，然后去一个尽可能大的长度，但需要满足三个桶都有这么多。</p><a id="more"></a><p>发现洛谷题解里啥vector,队列都来了，正宗的用来干这事的map表示:喵喵喵？</p><p>所以，我决定写一篇map题解</p><p>由于可能键值会重复（我也不确定qwq），所以用multimap</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> cnt1,cnt2,cnt3,n,x;</span><br><span class="line"><span class="built_in">multimap</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; num1,num2,num3;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        <span class="comment">//分别找对应的桶+1</span></span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)&#123;</span><br><span class="line">num1.insert(make_pair(++cnt1,i));<span class="comment">//没有重载[]，这是标准插入方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">2</span>)&#123;</span><br><span class="line">num2.insert(make_pair(++cnt2,i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">3</span>)&#123;</span><br><span class="line">num3.insert(make_pair(++cnt3,i));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans=min(cnt1,min(cnt2,cnt3));<span class="comment">//找出有几组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);<span class="comment">//输出组数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans;i++)&#123;<span class="comment">//输出位置</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;num1.find(i)-&gt;second&lt;&lt;<span class="string">" "</span>&lt;&lt;num2.find(i)-&gt;second&lt;&lt;<span class="string">" "</span>&lt;&lt;num3.find(i)-&gt;second&lt;&lt;<span class="built_in">endl</span>;/没有重载[]，这是标准输出方法</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：输入x，就在对应的桶+1，然后去一个尽可能大的长度，但需要满足三个桶都有这么多。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF412C 【Pattern】</title>
    <link href="https://yuygfgg.ml/2020/04/17/solution-cf412c/"/>
    <id>https://yuygfgg.ml/2020/04/17/solution-cf412c/</id>
    <published>2020-04-17T12:35:30.000Z</published>
    <updated>2020-05-02T02:40:17.716Z</updated>
    
    <content type="html"><![CDATA[<p>tips:不要以为样例没过就一定错</p><p>思路：什么也匹配不上的输出’?’，否则随便输出一个除了’?’的字母（这里是’a’）</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;a;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.size();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'?'</span>)&#123;</span><br><span class="line">a[i]=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'.'</span>)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]!=b[i]&amp;&amp;b[i]!=<span class="string">'?'</span>)&#123;</span><br><span class="line">a[i]=<span class="string">'.'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.size();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'.'</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'?'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'?'</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'a'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tips:不要以为样例没过就一定错&lt;/p&gt;
&lt;p&gt;思路：什么也匹配不上的输出’?’，否则随便输出一个除了’?’的字母（这里是’a’）&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 AT2654 【[ARC078A] Splitting Pile】</title>
    <link href="https://yuygfgg.ml/2020/04/04/solution-arc078a/"/>
    <id>https://yuygfgg.ml/2020/04/04/solution-arc078a/</id>
    <published>2020-04-04T09:55:55.000Z</published>
    <updated>2020-05-02T02:40:03.375Z</updated>
    
    <content type="html"><![CDATA[<p>思路：暴力求出所有可能，排序求最小绝对值差。</p><p>我用vector存储卡的信息，用set排序</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; a;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt; b;<span class="comment">//自动从小到大排序</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,tmp;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;<span class="comment">//由于空间大小不定，只能用push_back函数放入</span></span><br><span class="line">a.push_back(tmp);</span><br><span class="line">s+=tmp;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//现在开始空间大小一定，可以用从0开始的下标访问</span></span><br><span class="line">x=a[<span class="number">0</span>];</span><br><span class="line">y=s-a[<span class="number">0</span>];</span><br><span class="line">b.insert(<span class="built_in">abs</span>(x-y));<span class="comment">//插入第一个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">x+=a[i];</span><br><span class="line">y-=a[i];</span><br><span class="line">b.insert(<span class="built_in">abs</span>(x-y));<span class="comment">//插入set</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;*b.begin()&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输出自动排序好的最小数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：暴力求出所有可能，排序求最小绝对值差。&lt;/p&gt;
&lt;p&gt;我用vector存储卡的信息，用set排序&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF149A 【Business trip】</title>
    <link href="https://yuygfgg.ml/2020/04/04/solution-cf149a/"/>
    <id>https://yuygfgg.ml/2020/04/04/solution-cf149a/</id>
    <published>2020-04-04T01:42:09.000Z</published>
    <updated>2020-05-02T02:40:46.077Z</updated>
    
    <content type="html"><![CDATA[<p>思路：贪心。要让浇水的月份最少，就要让每个浇水月收益最大，所以做法是先将每个月的收益从大到小排序，尽量在收益大的月份浇水。</p><p>用multiset排序，每次取第i大累加直到满足要求即可</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,tmp,d=<span class="number">0</span>,s=<span class="number">0</span>,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">12</span>;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;<span class="comment">//输入临时变量再插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>)&#123;<span class="comment">//目标为0的话直接输出0</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=a.end();<span class="comment">//指向最大值的iterator</span></span><br><span class="line">it--;<span class="comment">//.end()指向的是最大值还要后面一个，所以要--</span></span><br><span class="line"><span class="keyword">for</span>(;it!=a.begin();it--)&#123;</span><br><span class="line">d+=*it;</span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">if</span>(d&gt;=k)&#123;<span class="comment">//完成</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">d+=*it;<span class="comment">//如果不补一次循环，第一个元素不会被遍历到</span></span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">if</span>(d&gt;=k)&#123;<span class="comment">//完成</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//无法完成目标</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：贪心。要让浇水的月份最少，就要让每个浇水月收益最大，所以做法是先将每个月的收益从大到小排序，尽量在收益大的月份浇水。&lt;/p&gt;
&lt;p&gt;用multiset排序，每次取第i大累加直到满足要求即可&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF919A 【Supermarket】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-cf919a/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-cf919a/</id>
    <published>2020-04-03T12:45:37.000Z</published>
    <updated>2020-05-02T02:41:01.622Z</updated>
    
    <content type="html"><![CDATA[<p>思路：贪心，找单价最便宜的超市买即可</p><p>用set从小到大排序</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>&gt; c;<span class="comment">//自动从小到大排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> tmp=((<span class="keyword">long</span> <span class="keyword">double</span>)a/b);</span><br><span class="line">        c.insert(tmp*n*<span class="number">1.0</span>);<span class="comment">//插入（*1.0用来强制类型转换，否则插入set的数是向下取整的int）</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">long</span> <span class="keyword">double</span>&gt;::iterator it=c.begin();<span class="comment">//最便宜超市的单价</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">10</span>)&lt;&lt;*it&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//保留十位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：贪心，找单价最便宜的超市买即可&lt;/p&gt;
&lt;p&gt;用set从小到大排序&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 SP11515 【BUSYMAN - I AM VERY BUSY】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-sp11515/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-sp11515/</id>
    <published>2020-04-03T06:35:01.000Z</published>
    <updated>2020-04-13T12:48:43.519Z</updated>
    
    <content type="html"><![CDATA[<p>这题是特别水的贪心，可以用自动排序的set实现</p><p>主要思路：将所有活动按结束时间从小到大排序，能进行活动就进行，遇到不能的就结束</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmp</span>&#123;</span><span class="comment">//比较函数类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> data&amp; x,<span class="keyword">const</span> data&amp; y)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(x.b==y.b)<span class="comment">//如果结束时间一样就按开始时间排</span></span><br><span class="line">        <span class="keyword">return</span> x.a&lt;y.a;</span><br><span class="line">    <span class="keyword">return</span> x.b&lt;y.b;<span class="comment">//否则就按结束时间排</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;data,cmp&gt; a;<span class="comment">//自动按比较函数类排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,t,ans,last;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">data tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=t;j++)&#123;<span class="comment">//由于空间大小是set自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp.a&gt;&gt;tmp.b;</span><br><span class="line">a.insert(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;data&gt;::iterator it=a.begin();<span class="comment">//指向开始的迭代器</span></span><br><span class="line">ans=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">last=INT_MIN;</span><br><span class="line"><span class="keyword">for</span>(;it!=a.end();it++)&#123;</span><br><span class="line"><span class="keyword">if</span>((*it).a&gt;=last)&#123;<span class="comment">//来得及</span></span><br><span class="line">ans++;<span class="comment">//能去的加一</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;i&lt;&lt;" "&lt;&lt;ans&lt;&lt;"eee"&lt;&lt;(*it).a&lt;&lt;" "&lt;&lt;(*it).b&lt;&lt;endl;</span></span><br><span class="line">last=(*it).b;<span class="comment">//更新上一次的结束时间</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">a.clear();<span class="comment">//insert会插入，不会覆盖，所以要清空set</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这题是特别水的贪心，可以用自动排序的set实现&lt;/p&gt;
&lt;p&gt;主要思路：将所有活动按结束时间从小到大排序，能进行活动就进行，遇到不能的就结束&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF230A 【Dragons】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-cf230a/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-cf230a/</id>
    <published>2020-04-03T03:06:09.000Z</published>
    <updated>2020-04-13T12:48:27.962Z</updated>
    
    <content type="html"><![CDATA[<p>用贪心的策略，每次打最小的龙</p><p>这里用会自动排序的set实现。</p><a id="more"></a><p>具体见代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dr</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;<span class="comment">//龙的结构体</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">drcmp</span>&#123;</span><span class="comment">//比较函数类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> dr&amp; a,<span class="keyword">const</span> dr&amp; b)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a.x&lt;=b.x;<span class="comment">//注意，要&lt;=，不是&lt;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;dr,drcmp&gt; a;<span class="comment">//存龙的信息的set，使用自定义比较函数类</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> f,n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;f&gt;&gt;n;</span><br><span class="line">dr tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp.x&gt;&gt;tmp.y;<span class="comment">//输入临时变量在插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;dr&gt;::iterator it=a.begin();<span class="comment">//定义指向开头（最小）的迭代器</span></span><br><span class="line"><span class="keyword">for</span>(;it!=a.end();it++)&#123;</span><br><span class="line"><span class="keyword">if</span>(f&gt;(*it).x) f+=(*it).y;<span class="comment">//现有力量值足够，加上额外获得的（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//不能，输出，结束</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//能进入下一层</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用贪心的策略，每次打最小的龙&lt;/p&gt;
&lt;p&gt;这里用会自动排序的set实现。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF892A 【Greed】</title>
    <link href="https://yuygfgg.ml/2020/04/02/solution-cf892a/"/>
    <id>https://yuygfgg.ml/2020/04/02/solution-cf892a/</id>
    <published>2020-04-02T13:06:28.000Z</published>
    <updated>2020-04-13T12:48:11.470Z</updated>
    
    <content type="html"><![CDATA[<p>把所有可乐倒进2个罐子里，那么肯定是选最大的两个罐子，再和总可乐数比较即可。</p><p>要自动排序又不会去重的数据结构当然选multiset</p><a id="more"></a><p>具体用法见代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; a;<span class="comment">//自动从小到大排序但不会去重的数据结构</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp,n,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;<span class="comment">//输入可乐数并累加</span></span><br><span class="line">sum+=tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;<span class="comment">////由于空间大小是multiset自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;::iterator it=a.end();<span class="comment">//因为是从小到大排序，所以最大的在结尾处</span></span><br><span class="line">it--;<span class="comment">//.end()函数返回的iterator是最后一个元素还要后面一个，所以真正最大的要-1，但multiset::iterator不支持除++和--以外的运算，所以用--运算</span></span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;::iterator it2=it;<span class="comment">//第二大</span></span><br><span class="line">it2--;<span class="comment">//同上</span></span><br><span class="line"><span class="keyword">if</span>(sum&lt;=(*it+*it2)) <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//装得下（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//装不下</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把所有可乐倒进2个罐子里，那么肯定是选最大的两个罐子，再和总可乐数比较即可。&lt;/p&gt;
&lt;p&gt;要自动排序又不会去重的数据结构当然选multiset&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF653A 【Bear and Three Balls】</title>
    <link href="https://yuygfgg.ml/2020/04/02/solution-cf653a/"/>
    <id>https://yuygfgg.ml/2020/04/02/solution-cf653a/</id>
    <published>2020-04-02T06:45:44.000Z</published>
    <updated>2020-04-13T12:45:33.546Z</updated>
    
    <content type="html"><![CDATA[<p>思路：排序+去重，判断是否有连续的三个数</p><p>看到既要排序还要去重，当然用set啦</p><a id="more"></a><p>具体解释见代码<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; a;<span class="comment">//这是一个自动排序+去重的数据结构</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;<span class="comment">//由于空间大小是set自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator ed=a.end();<span class="comment">//不直接用.end()的原因看下面for语句的解释</span></span><br><span class="line">ed--;<span class="comment">//由于set::iterator不能用-=运算符，只能分两次--</span></span><br><span class="line">ed--;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=a.begin();it!=ed;it++)&#123;<span class="comment">//it为a.end()时it+1和+2处会越界，所以用前面相当于a.end()-2的iterator做边界</span></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it2=it;<span class="comment">//it+1，因为set::iterator不支持+=或+，所以定义两个iterator分别代表it+1和it+2</span></span><br><span class="line">it2++;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it3=it2;<span class="comment">//it+2，理由同上</span></span><br><span class="line">it3++;</span><br><span class="line"><span class="keyword">if</span>(*it+<span class="number">1</span>==*it2&amp;&amp;*it2+<span class="number">1</span>==*it3)&#123;<span class="comment">//判断是否为连续三个数（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//满足</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//结束</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//不满足</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：排序+去重，判断是否有连续的三个数&lt;/p&gt;
&lt;p&gt;看到既要排序还要去重，当然用set啦&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>神虎牌删犇器</title>
    <link href="https://yuygfgg.ml/2020/03/28/shen-hu-pai-shan-ben-qi/"/>
    <id>https://yuygfgg.ml/2020/03/28/shen-hu-pai-shan-ben-qi/</id>
    <published>2020-03-28T09:55:45.000Z</published>
    <updated>2020-04-13T12:47:27.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li><p>按下键盘上的 <code>f12</code> 按键。</p></li><li><p>在右方控制栏中点击 <code>Console</code> 会出现可以输入的区域。</p></li><li><p>输入下方的这段代码。</p><a id="more"></a></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">switchMode('my');</span><br><span class="line"><span class="function">function <span class="title">load</span><span class="params">()</span> </span>&#123;</span><br><span class="line">console.log('page ' + feedPage);</span><br><span class="line">$.get(<span class="string">"/feed/"</span> + feedMode + <span class="string">"?page="</span> + feedPage, function (resp) &#123;</span><br><span class="line">$feed.append(resp);</span><br><span class="line">$(<span class="string">"#feed-more"</span>).children(<span class="string">"a"</span>).text(<span class="string">"点击查看更多..."</span>)</span><br><span class="line">$(<span class="string">"[name=feed-delete]"</span>).click(function () &#123;</span><br><span class="line">$.post("/api/feed/delete/" + $(this).attr('data-feed-id'), function () &#123;</span><br><span class="line">switchMode('all');</span><br><span class="line">&#125;)</span><br><span class="line">&#125;); feedPage++;</span><br><span class="line">if (resp.indexOf('没有更多动态了') != -1) console.log('finished');</span><br><span class="line"><span class="keyword">else</span> setTimeout(load, <span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(load, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><ol><li><p>接着回车 <code>enter</code> 即可。</p></li><li><p>马上会出现一大串的数字，慢慢等待 <code>Page</code> 闪完后出现 <code>finish</code>。</p></li></ol><p>接着输入以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var l =  $('#feed &gt; li &gt; div.am-comment-main &gt; header &gt; div &gt; a:nth-child(2)');</span><br><span class="line"><span class="function">function <span class="title">f</span><span class="params">(i)</span> </span>&#123;</span><br><span class="line">$ .post("/api/feed/delete/"+ $(l[i]).attr('data-feed-id'), function() &#123;</span><br><span class="line">console.<span class="built_in">log</span>(i);</span><br><span class="line"><span class="keyword">if</span>(i&lt;l.length<span class="number">-1</span>)setTimeout(`f($&#123;i+<span class="number">1</span>&#125;)`,<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">f(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ol><li>如果出现 <code>503</code> 界面重新再次<strong>重复上述过程</strong>。</li></ol><p>直到删完为止，重新加载整个界面，建议重启浏览器。</p><p>最后就完成了删犇的过程。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;按下键盘上的 &lt;code&gt;f12&lt;/code&gt; 按键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在右方控制栏中点击 &lt;code&gt;Console&lt;/code&gt; 会出现可以输入的区域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入下方的这段代码。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="工具" scheme="https://yuygfgg.ml/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关于BFS</title>
    <link href="https://yuygfgg.ml/2020/03/06/about-bfs/"/>
    <id>https://yuygfgg.ml/2020/03/06/about-bfs/</id>
    <published>2020-03-06T12:57:43.000Z</published>
    <updated>2020-04-13T12:44:40.042Z</updated>
    
    <content type="html"><![CDATA[<p><del>他死了</del></p><a id="more"></a><p>BFS，即宽度优先搜索（balabala不讲无意义内容）<br>核心：用一个队列来记录“待办事项”，用最短路来举个例子，代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>][<span class="number">1001</span>],q[<span class="number">250000</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> sx,sy,ex,ey;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'.'</span>) a[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'#'</span>) a[i][j]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'*'</span>)&#123;</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">ex=i;</span><br><span class="line">ey=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'@'</span>)&#123;</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">sx=i;</span><br><span class="line">sy=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> h=<span class="number">1</span>,t=<span class="number">1</span>,n,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">input(n,m);</span><br><span class="line">q[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">q[<span class="number">1</span>][<span class="number">1</span>]=sx;<span class="comment">//初始化“待办事项</span></span><br><span class="line">q[<span class="number">1</span>][<span class="number">2</span>]=sy;<span class="comment">//同上</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(h&lt;=t)&#123;</span><br><span class="line"><span class="keyword">if</span>(q[h][<span class="number">1</span>]==ex&amp;&amp;q[h][<span class="number">2</span>]==ey)&#123;<span class="comment">//达到目标</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;q[h][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">x=q[h][<span class="number">1</span>]+dx[i];<span class="comment">//拿到事情</span></span><br><span class="line">y=q[h][<span class="number">2</span>]+dy[i];<span class="comment">//同上</span></span><br><span class="line"><span class="keyword">if</span>(a[x][y]==<span class="number">0</span>)&#123;<span class="comment">//做事</span></span><br><span class="line">t++;</span><br><span class="line">q[t][<span class="number">0</span>]=q[h][<span class="number">0</span>]+<span class="number">1</span>;<span class="comment">//产生新事</span></span><br><span class="line">q[t][<span class="number">1</span>]=x;<span class="comment">//同上</span></span><br><span class="line">q[t][<span class="number">2</span>]=y;<span class="comment">//同上</span></span><br><span class="line">a[x][y]=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">h++;<span class="comment">//做完了一件事</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//无解</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面没有用STL中的queue，但原理相同。<br>代码中每次穷举的是步数（即离终点的距离），一次while穷举一个步数。<br>可以看到，队列在while循环做完之前不为空（即有效解一定在穷举完所有步数之前得到），所以BFS的解一般是在循环内产生。<br>然后，我们用深搜（DFS）来实现一下<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">105</span>][<span class="number">105</span>],d[<span class="number">105</span>][<span class="number">105</span>],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dg</span><span class="params">(<span class="keyword">int</span> dep,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep&lt;d[i][j]&amp;&amp;dep&lt;<span class="number">200</span>)&#123;</span><br><span class="line">d[i][j]=dep;</span><br><span class="line"><span class="keyword">if</span>(a[i][j+<span class="number">1</span>]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i,j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[i+<span class="number">1</span>][j]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i+<span class="number">1</span>,j);</span><br><span class="line"><span class="keyword">if</span>(a[i][j<span class="number">-1</span>]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i,j<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>][j]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i<span class="number">-1</span>,j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'.'</span>) a[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'#'</span>) a[i][j]=<span class="number">-1</span>;</span><br><span class="line">d[i][j]=INT_MAX;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">input(n,m);</span><br><span class="line">dg(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;d[n][m]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>可以发现，DFS慢在于需要回溯，而且不做到底不回头，举个例子，正确路径是右右右右，而DFS永远先穷举左，产生大量无意义劳动，而BFS只需要循环4*4=16次，速度进步巨大。（所以DFS要加玄学限制:dep&lt;200）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;他死了&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="学习笔记" scheme="https://yuygfgg.ml/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第一次做工程的成果</title>
    <link href="https://yuygfgg.ml/2020/03/05/first-project/"/>
    <id>https://yuygfgg.ml/2020/03/05/first-project/</id>
    <published>2020-03-05T12:08:02.000Z</published>
    <updated>2020-04-13T12:47:12.440Z</updated>
    
    <content type="html"><![CDATA[<p>寒假里摸鱼的成果</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">坑点大全：</span></span><br><span class="line"><span class="comment">1.地图是25*25的，不是27*27的</span></span><br><span class="line"><span class="comment">2.x,y是行，列，不是列，行（可能某些地方做了转换） </span></span><br><span class="line"><span class="comment">3.p1在代码中还记作p1，但p2记作p0</span></span><br><span class="line"><span class="comment">4.p2(p0)代码中变量为p1的后面加数字1</span></span><br><span class="line"><span class="comment">5.重要！！重要！！！！重要！！！这个程序分4个线程，分别是打印地图，main函数，p1键盘侦测，p2（p0）键盘侦测</span></span><br><span class="line"><span class="comment">6.原来想做的事战略游戏（放置方块）（像皇室战争）所以障碍才分1-4，1、2归P1，3、4归P2，后来改成走迷宫，添加了6目标方块，还可以放障碍（1-4），后来变成放地雷，再变成自动生成地雷，最后水平不足，变成</span></span><br><span class="line"><span class="comment">自动生成障碍。</span></span><br><span class="line"><span class="comment">7.请未来的自己帮忙，其实自动行走是bug。（2020.1.25） </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line">COORD coord;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mapx=<span class="number">27</span>;</span><br><span class="line"><span class="keyword">bool</span> stop=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> maps[mapx][mapx];</span><br><span class="line">HANDLE hCon;</span><br><span class="line"><span class="keyword">int</span> p1ott,p1btt,p2ott,p2btt,pn=<span class="number">1</span>,x=<span class="number">2</span>,y=<span class="number">2</span>,ops,ops1,x1=<span class="number">2</span>,y1=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">enum</span> Color &#123;DARKBLUE=<span class="number">1</span>,DARKGREEN,DARKTEAL,DARKRED,DARKPINK,DARKYELLOW,GRAY,DARKGRAY,BLUE,GREEN,TEAL,RED,PINK,YELLOW,WHITE&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">window</span><span class="params">()</span></span>&#123;</span><br><span class="line">HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">CONSOLE_CURSOR_INFO CursorInfo;</span><br><span class="line">GetConsoleCursorInfo(handle,&amp;CursorInfo);</span><br><span class="line">CursorInfo.bVisible=<span class="literal">false</span>;</span><br><span class="line">SetConsoleCursorInfo(handle,&amp;CursorInfo); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(Color c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(hCon==<span class="literal">NULL</span>)</span><br><span class="line">    hCon=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleTextAttribute(hCon,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoToxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    coord.X=x;</span><br><span class="line">    coord.Y=y;</span><br><span class="line">    HANDLE a=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(a,coord);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clrscr</span><span class="params">()</span></span>&#123; </span><br><span class="line">HANDLE hndl=GetStdHandle(STD_OUTPUT_HANDLE); </span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO csbi; </span><br><span class="line">GetConsoleScreenBufferInfo(hndl,&amp;csbi); </span><br><span class="line">DWORD written; </span><br><span class="line">DWORD N=csbi.dwSize.X*csbi.dwCursorPosition.Y+csbi.dwCursorPosition.X+<span class="number">1</span>; </span><br><span class="line">COORD curhome=&#123;<span class="number">0</span>,<span class="number">0</span>&#125;; </span><br><span class="line">FillConsoleOutputCharacter(hndl,<span class="string">' '</span>,N,curhome,&amp;written); </span><br><span class="line">csbi.srWindow.Bottom-=csbi.srWindow.Top; </span><br><span class="line">csbi.srWindow.Top=<span class="number">0</span>; </span><br><span class="line">SetConsoleWindowInfo(hndl,TRUE,&amp;csbi.srWindow); </span><br><span class="line">SetConsoleCursorPosition(hndl,curhome); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">keyboard</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP)&amp;<span class="number">0x8000</span>)  </span><br><span class="line"><span class="keyword">return</span> <span class="string">'w'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN)&amp;<span class="number">0x8000</span>)  </span><br><span class="line"><span class="keyword">return</span> <span class="string">'s'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_LEFT)&amp;<span class="number">0x8000</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'a'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_RIGHT)&amp;<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'d'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD8)&amp;<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'i'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD5)&amp;<span class="number">0x8000</span>)  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'k'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD4)&amp;<span class="number">0x8000</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'j'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD6)&amp;<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'l'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">to_ch_map</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="keyword">return</span> <span class="string">'.'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> <span class="string">'@'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span> <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="keyword">return</span> <span class="string">'$'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">return</span> <span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="keyword">return</span> <span class="string">'='</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="keyword">return</span> <span class="string">'*'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="keyword">return</span> <span class="string">'&amp;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">outputmap</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">char</span> c2;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;mapx;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;mapx;j++)&#123;</span><br><span class="line">GoToxy(j,i);</span><br><span class="line">c=maps[i][j];</span><br><span class="line">c2=to_ch_map(c);</span><br><span class="line"><span class="keyword">if</span>(maps[i][j]==<span class="number">5</span>||maps[i][j]==<span class="number">7</span>)&#123;</span><br><span class="line">SetColor(RED);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,c2);</span><br><span class="line">SetColor(YELLOW);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">p1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">int</span> oops=ops;</span><br><span class="line"><span class="keyword">int</span> ox=<span class="number">1</span>,oy=<span class="number">1</span>,th;</span><br><span class="line">ox=x;oy=y;</span><br><span class="line">op=keyboard();</span><br><span class="line"><span class="keyword">switch</span>(op)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'w'</span>:x--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:x++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'a'</span>:y--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'d'</span>:y++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(maps[x][y]!=<span class="number">0</span>&amp;&amp;maps[x][y]!=<span class="number">6</span>)&#123;</span><br><span class="line">x=ox;</span><br><span class="line">y=oy;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(oops==<span class="number">0</span>&amp;&amp;ops==<span class="number">0</span>) maps[ox][oy]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ops==<span class="number">0</span>) maps[x][y]=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">p2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> op1;</span><br><span class="line"><span class="keyword">int</span> oops1=ops1;</span><br><span class="line"><span class="keyword">int</span> ox1=<span class="number">1</span>,oy1=<span class="number">1</span>,th1;</span><br><span class="line">ox1=x1;oy1=y1;</span><br><span class="line">op1=keyboard();</span><br><span class="line"><span class="keyword">switch</span>(op1)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'i'</span>:x1--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'k'</span>:x1++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'j'</span>:y1--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'l'</span>:y1++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(maps[x1][y1]!=<span class="number">0</span>&amp;&amp;maps[x1][y1]!=<span class="number">6</span>)&#123;</span><br><span class="line">x1=ox1;</span><br><span class="line">y1=oy1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(oops1==<span class="number">0</span>&amp;&amp;ops1==<span class="number">0</span>) maps[ox1][oy1]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ops1==<span class="number">0</span>) maps[x1][y1]=<span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>&#123;</span><br><span class="line">srand(time(<span class="number">0</span>));</span><br><span class="line"><span class="built_in">memset</span>(maps,rand(),<span class="keyword">sizeof</span>(maps));</span><br><span class="line"><span class="built_in">memset</span>(maps,<span class="number">0</span>,<span class="keyword">sizeof</span>(maps));</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">11</span>]=<span class="number">6</span>;</span><br><span class="line">maps[<span class="number">10</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">8</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">13</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">10</span>][mapx<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][mapx<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">8</span>][mapx<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">13</span>][mapx<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">10</span>]=<span class="number">2</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">12</span>]=<span class="number">2</span>;</span><br><span class="line">maps[<span class="number">10</span>][<span class="number">11</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mapx<span class="number">-1</span>;i++)&#123;</span><br><span class="line">maps[<span class="number">1</span>][i]=<span class="number">2</span>;</span><br><span class="line">maps[i][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mapx<span class="number">-1</span>;i++)&#123;</span><br><span class="line">maps[i][mapx<span class="number">-1</span>]=<span class="number">2</span>;</span><br><span class="line">maps[mapx<span class="number">-1</span>][i]=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">srand(time(<span class="number">0</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;mapx<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;mapx<span class="number">-1</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">11</span>||i==<span class="number">11</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">10</span>==<span class="number">0</span>) maps[i][j]==<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">13</span>==<span class="number">0</span>) maps[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">75</span>==<span class="number">0</span>) maps[i][j]=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line">outputmap();</span><br><span class="line">&#125;</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line">p2();</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th3</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line">p1();</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">window();</span><br><span class="line">start();</span><br><span class="line"><span class="function">thread <span class="title">t</span><span class="params">(&amp;th1)</span></span>;</span><br><span class="line"><span class="function">thread <span class="title">t1</span><span class="params">(&amp;th2)</span></span>;</span><br><span class="line"><span class="function">thread <span class="title">t3</span><span class="params">(&amp;th3)</span></span>;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">5</span>&amp;&amp;maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">7</span>&amp;&amp;maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">6</span>)&#123;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">11</span>]=<span class="number">6</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"this block must be 6!!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]==<span class="number">5</span>)&#123;</span><br><span class="line">stop=!stop;</span><br><span class="line">clrscr();</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"color 07"</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"p1 WIN"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]==<span class="number">7</span>)&#123;</span><br><span class="line">stop=!stop;</span><br><span class="line">clrscr();</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"color 07"</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"p2 WIN"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;寒假里摸鱼的成果&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="其他" scheme="https://yuygfgg.ml/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>从记忆化搜索到DP（动态规划）</title>
    <link href="https://yuygfgg.ml/2020/02/19/dp/"/>
    <id>https://yuygfgg.ml/2020/02/19/dp/</id>
    <published>2020-02-19T13:01:57.000Z</published>
    <updated>2020-04-13T12:46:05.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><p>记忆化搜索是啥</p></li><li><p>记忆化搜索和动态规划有啥关系</p></li><li><p>动态规划做法</p><a id="more"></a><h1 id="1-记忆化搜索是啥（引入"><a href="#1-记忆化搜索是啥（引入" class="headerlink" title="1. 记忆化搜索是啥（引入"></a>1. 记忆化搜索是啥（引入</h1><p>好，就以采药这道题为例，我不会动态规划，只会搜索，我就会直接写一个粗暴的 DFS :</p></li></ul><p>注: 为了方便食用, 本文中所有代码省略头文件<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"><span class="keyword">int</span> tcost[<span class="number">103</span>],mget[<span class="number">103</span>];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> tleft,<span class="keyword">int</span> tans)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tleft&lt;<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos==n+<span class="number">1</span>)&#123;</span><br><span class="line">        ans=max(ans,tans);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(pos+<span class="number">1</span>,tleft,tans);</span><br><span class="line">    dfs(pos+<span class="number">1</span>,tleft-tcost[pos],tans+mget[pos]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tcost[i]&gt;&gt;mget[i];</span><br><span class="line">    dfs(<span class="number">1</span>,t,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>30pts</p><p>然后我心血来潮, 想不借助任何 “外部变量”(就是 dfs 函数外且 值随 dfs 运行而改变的变量 ), 比如 ans</p><p>把 ans 删了之后就有一个问题: 我们拿什么来记录答案?</p><p>答案很简单:</p><p>返回值!</p><p>此时 dfs(pos,tleft) 返回在时间 tleft内采集 后 pos 个草药, 能获得的最大收益</p><p>不理解就看看代码吧:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,time;</span><br><span class="line"><span class="keyword">int</span> tcost[<span class="number">103</span>],mget[<span class="number">103</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> tleft)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pos==n+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> dfs1,dfs2=-INF;</span><br><span class="line">    dfs1=dfs(pos+<span class="number">1</span>,tleft);</span><br><span class="line">    <span class="keyword">if</span>( tleft&gt;tcost[pos] )</span><br><span class="line">        dfs2=dfs(pos+<span class="number">1</span>,tleft-tcost[pos])+mget[pos];</span><br><span class="line">    <span class="keyword">return</span> max(dfs1,dfs2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;time&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tcost[i]&gt;&gt;mget[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(<span class="number">1</span>,time)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><del>还是30pts，我太难了</del><br>但这个时候, 我们的程序已经不依赖任何外部变量了.</p><p>然后我非常无聊, 将所有 dfs 的返回值都记录下来, 竟然发现……</p><pre><code>震惊, 对于相同的 pos 和 tleft,dfs 的返回值总是相同的!</code></pre><p>想一想也不奇怪, 因为我们的 dfs 没有依赖任何外部变量.</p><p>旁白: 像 tcost[103],mget[103] 这种东西不算是外部变量, 因为她们在 dfs 过程中不变.</p><p>然后?</p><p>开个数组 mem , 记录下来每个 dfs(pos,tleft) 的返回值. 刚开始把 mem 中每个值都设成 -1 (代表没访问过). 每次刚刚进入一个 dfs 前(我们的 dfs 是递归调用的嘛), 都检测 mem[pos][tleft]是否为 -1 , 如果是就正常执行并把答案记录到 mem 中, 否则?</p><p>直接返回 mem 中的值!<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,t;</span><br><span class="line"><span class="keyword">int</span> tcost[<span class="number">103</span>],mget[<span class="number">103</span>];</span><br><span class="line"><span class="keyword">int</span> mem[<span class="number">103</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> pos,<span class="keyword">int</span> tleft)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(mem[pos][tleft]!=<span class="number">-1</span>) <span class="keyword">return</span> mem[pos][tleft];</span><br><span class="line">    <span class="keyword">if</span>(pos==n+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> mem[pos][tleft] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> dfs1,dfs2=-INF;</span><br><span class="line">    dfs1 = dfs(pos+<span class="number">1</span>,tleft);</span><br><span class="line">    <span class="keyword">if</span>(tleft&gt;=tcost[pos])</span><br><span class="line">        dfs2=dfs(pos+<span class="number">1</span>,tleft-tcost[pos])+mget[pos];</span><br><span class="line">    <span class="keyword">return</span> mem[pos][tleft]=max(dfs1,dfs2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(mem,<span class="number">-1</span>,<span class="keyword">sizeof</span>(mem));</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tcost[i]&gt;&gt;mget[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(<span class="number">1</span>,t)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>此时 mem 的意义与 dfs 相同：</p><pre><code>在时间 tleft内采集 后 pos 个草药, 能获得的最大收益</code></pre><p>这能 ac?</p><p>能. 这就是 “采药” 那题的 AC 代码</p><p>好我们倒腾出了记忆化搜索</p><p>总结一下记忆化搜索是啥:<br>不依赖任何 外部变量，答案以返回值的形式存在, 而不能以参数的形式存在(就是不能将 dfs 定义成 dfs(pos,tleft,nowans ), 这里面的 nowans 不符合要求).</p><p>对于相同一组参数, dfs 返回值总是相同的</p><h1 id="记忆化搜索与动态规划的关系-（分析"><a href="#记忆化搜索与动态规划的关系-（分析" class="headerlink" title="记忆化搜索与动态规划的关系:（分析"></a>记忆化搜索与动态规划的关系:（分析</h1><p>基本是朋 (ji) 友关系</p><p>有人会问: 记忆化搜索难道不是搜索?</p><p>一定程度上来说，她是搜索.但个人认为她更像dp</p><p>其实说白了，记忆化搜索就是dp</p><p>不信你看mem 的意义:</p><p>在时间 tleft 内采集 后 pos 个草药, 能获得的最大收益</p><p>这不就是dp的状态?</p><p>由上面的代码中可以看出:</p><p>dfs(pos,left) = max(dfs(pos+1,tleft-tcost[pos])+mget[pos] , dfs(pos+1,tleft))<br>即为</p><p>mem[pos][tleft] = max(mem[pos+1][tleft-tcost[pos]]+mget[pos] , mem[pos+1][tleft])<br>这不就是dp的状态转移?</p><p>总结一下：</p><pre><code>记忆化搜索和动态规划从根本上来讲就是一个东西,**(印象中)任何一个 dp 方程都能转为记忆化搜索 ，反之亦然（为什么？见下文“体现在”的第四条）</code></pre><p>体现在</p><ul><li><p>根据记忆化搜索的参数可以直接得到dp的状态，反之亦然</p></li><li><p>根据记忆化搜索的递归关系可以写出状态转移方程，这个方程可以直接写出循环式的dp，只不过是反的(想想为什么？)，反之亦然</p></li><li><p>大部分记忆化搜索时空复杂度与 不加优化的 dp 完全相同</p></li><li><p><strong>最重要的一点：二者思想类似！！ 核心思想均为：利用对于相同参数答案相同的特性，对于相同的参数（循环式的dp体现为数组下标），记录其答案，免去重复计算，从而起到优化时间复杂度的作用。这，便是二者的精髓。</strong></p></li></ul><p>建议好好想想第四条。记住，学一个算法，一定要理解他的精髓。</p><p>举个栗子:</p><p>dp[i][j][k] = dp[i+1][j+1][k-a[j]] + dp[i+1][j][k]<br>转为<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    边界条件</span><br><span class="line">    <span class="keyword">if</span>( mem[i][j][k]!=<span class="number">-1</span>) <span class="keyword">return</span> mem[i][j][k];</span><br><span class="line">    <span class="keyword">return</span> mem[i][j][k]=dfs(i+<span class="number">1</span>,j+<span class="number">1</span>,k-a[j])+dfs(i+<span class="number">1</span>,j,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(mem,<span class="number">-1</span>,<span class="keyword">sizeof</span>(mem));</span><br><span class="line">    读入</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>二者满足上面提到的所有关系</p><h1 id="dp做法"><a href="#dp做法" class="headerlink" title="dp做法"></a>dp做法</h1><p><del>上面转移方程都出来了，还不会？？</del><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1001</span>],n,t,v[<span class="number">101</span>],w[<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;w[i]&gt;&gt;v[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=t;j&gt;=w[i];j--) &#123;</span><br><span class="line">            f[j]=max(f[j-w[i]]+v[i], f[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;f[t];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;记忆化搜索是啥&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;记忆化搜索和动态规划有啥关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动态规划做法&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="学习笔记" scheme="https://yuygfgg.ml/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>递归</title>
    <link href="https://yuygfgg.ml/2019/10/25/dg/"/>
    <id>https://yuygfgg.ml/2019/10/25/dg/</id>
    <published>2019-10-24T16:00:00.000Z</published>
    <updated>2020-04-13T12:47:01.705Z</updated>
    
    <content type="html"><![CDATA[<p>这节课学了递归，<del>好晕</del></p><p>好不容易想通了一点赶紧记下，充当第一篇博客</p><a id="more"></a><p>递归就是函数自己调用自己的过程。那为什么要有递归呢？原因很简单：在解决一个问题的同时，需要解决另一个与当前问题相同的问题，并且这个问题在特定情况下有解（递归结束条件），其他情况的答案都可由此答案推导而来（转移方程）。那又有问题了，为什么不用循环呢？观察上面的描述中“需要解决另一个与当前问题相同的问题”这一句话，真的只需要解决另一个吗？答案是否定的，有可能要解决多个同样的问题，这种情况下，如果使用循环，那么每个循环都要产生多个同样的循环，是无法实现的，所以才要使用递归。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这节课学了递归，&lt;del&gt;好晕&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;好不容易想通了一点赶紧记下，充当第一篇博客&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="学习笔记" scheme="https://yuygfgg.ml/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
