<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuygfgg&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuygfgg.ml/"/>
  <updated>2020-06-14T05:13:12.110Z</updated>
  <id>https://yuygfgg.ml/</id>
  
  <author>
    <name>yuygfgg</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零建立你自己的OJ</title>
    <link href="https://yuygfgg.ml/2020/06/14/vijos/"/>
    <id>https://yuygfgg.ml/2020/06/14/vijos/</id>
    <published>2020-06-14T05:02:01.000Z</published>
    <updated>2020-06-14T05:13:12.110Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相信你早就看洛谷<a href="https://vijos.org/discuss/5eb6bacaf41362fce91dfb32#1590839138" target="_blank" rel="noopener"><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfjrssptpvj30de01e0st.jpg" alt="gag"></a><br>不惯了，所以，一起动手搭建一个$ \color{red} \text{社区功能丰富} $的OJ吧</p><a id="more"></a><h2 id="挑选OJ"><a href="#挑选OJ" class="headerlink" title="挑选OJ"></a>挑选OJ</h2><p>目前开源的OJ有：hustoj,qdoj,uoj等等等等，但缺点都很明显：社区功能太弱。</p><p>所以，在意外中发现，vijos竟然是<a href="https://github.com/vijos/vj4-docker/blob/master/README.zh-CN.md" target="_blank" rel="noopener">开源</a>的，于是这就成了不二之选</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>这里我选用docker desktop，一是界面好看，二是操作简单，下载链接请自行百度。</p><h4 id="配置docker加速器"><a href="#配置docker加速器" class="headerlink" title="配置docker加速器"></a>配置docker加速器</h4><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfjs32jupgj30do0jgtiz.jpg" alt="docker"></p><p>点<code>Preferences</code> 在<code>Docker Engine</code>栏中输入</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"debug"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"experimental"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://registry.docker-cn.com"</span></span><br><span class="line">  ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfjs3kko76j31b70u0jwm.jpg" alt="v"></p><h3 id="github加速"><a href="#github加速" class="headerlink" title="github加速"></a>github加速</h3><p>在终端执行<code>nano /etc/hosts</code>,在末尾加上</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.113  gitHub.com</span><br><span class="line">151.101.185.194 gitHub.gload.ssl.fastly.net</span><br><span class="line">192.30.253.120  codeload.githb.com</span><br></pre></td></tr></tbody></table></figure><h2 id="安装OJ"><a href="#安装OJ" class="headerlink" title="安装OJ"></a>安装OJ</h2><h3 id="拉取文件"><a href="#拉取文件" class="headerlink" title="拉取文件"></a>拉取文件</h3><p>执行<code>git clone https://github.com/vijos/vj4-docker.git</code></p><h3 id="启动web服务"><a href="#启动web服务" class="headerlink" title="启动web服务"></a>启动web服务</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd vj4-docker</span><br><span class="line">cp .env.example .env</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></tbody></table></figure><h3 id="添加超级管理员"><a href="#添加超级管理员" class="headerlink" title="添加超级管理员"></a>添加超级管理员</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias drpm="docker-compose run --rm web"</span><br><span class="line">drpm vj4.model.user add 114514 iee 233333 ee@iee.wee # 顺序为 uid username password email，创建用户，你也可以使用网页注册</span><br><span class="line">drpm vj4.model.user set_superadmin -1 # -1 是 uid，将 -1 设置为管理员</span><br></pre></td></tr></tbody></table></figure><h3 id="启动评测服务"><a href="#启动评测服务" class="headerlink" title="启动评测服务"></a>启动评测服务</h3><h4 id="添加评测用户"><a href="#添加评测用户" class="headerlink" title="添加评测用户"></a>添加评测用户</h4><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias drpm="docker-compose run --rm web"</span><br><span class="line">drpm vj4.model.user add -2 judge 123456 judge@example.org # 顺序为 uid username password email，创建用户，你也可以使用网页注册</span><br><span class="line">drpm vj4.model.user set_judge -2 # -2 是 uid，将 -2 设置为评测用户</span><br></pre></td></tr></tbody></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><h5 id="下载模板"><a href="#下载模板" class="headerlink" title="下载模板"></a>下载模板</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ./data/judge/ && wget -O ./data/judge/config.yaml https://raw.githubusercontent.com/vijos/jd4/master/examples/config.yaml</span><br><span class="line">nano ./data/judge/config.yaml</span><br></pre></td></tr></tbody></table></figure><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>在配置文件中的 <code>server_url</code>，填入 <code>http://web:8888/</code><br>随后在 <code>docker-compose.yml</code> 中将 <code>judge</code> 部分的代码取消注释并保存。再次执行 <code>docker-compose up -d</code> 即可正常评测程序。</p><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><p>现在评测机的性能非常弱鸡，原因很简单——你没有把服务器（电脑）的所有性能分配给它，这一步讲让它拥有更多的资源</p><p>还是在<code>Preferences</code>里，选<code>Resources</code>，把CPU和内存拉满就可以了<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gfjsqaot8zj31b90u0wjk.jpg" alt="wee"></p><p>tips:别担心，这里的内存分配不是像虚拟机一样立即吃掉，而是是动态的，8G只是最大容量</p><h2 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h2><p>现在，访问<code>localhost:8888</code>就可以看到你自己的oj了！</p><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>欢迎来 <a href="https://oj.yuygfgg.ml" target="_blank" rel="noopener">https://oj.yuygfgg.ml</a> 玩（这个是我用内网穿透做的，二我的电脑可能会关机，所以很可能上不去）</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;相信你早就看洛谷&lt;a href=&quot;https://vijos.org/discuss/5eb6bacaf41362fce91dfb32#1590839138&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlgy1gfjrssptpvj30de01e0st.jpg&quot; alt=&quot;gag&quot;&gt;&lt;/a&gt;&lt;br&gt;不惯了，所以，一起动手搭建一个$ \color{red} \text{社区功能丰富} $的OJ吧&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="其他" scheme="https://yuygfgg.ml/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF863B 【Kayaking】</title>
    <link href="https://yuygfgg.ml/2020/05/29/solution-cf863b/"/>
    <id>https://yuygfgg.ml/2020/05/29/solution-cf863b/</id>
    <published>2020-05-29T07:55:41.000Z</published>
    <updated>2020-05-29T08:42:38.591Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：因为只有两条单人皮艇，可以排除坐单人皮艇的两个人，剩下的数排序并求出相邻两数差值的和$sum$（最小的稳定性一定是排序后两两相邻数的差值之和），求出做小的$sum$</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> n,m,we;</span><br><span class="line">    m=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>>>n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">2</span>*n;i++)</span><br><span class="line">        <span class="built_in">cin</span>>>a[i];</span><br><span class="line">    sort(a,a+<span class="number">2</span>*n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<<span class="number">2</span>*n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j<<span class="number">2</span>*n;j++){</span><br><span class="line">            we=s=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l<<span class="number">2</span>*n;l++)</span><br><span class="line">                <span class="keyword">if</span>(l^i&&l^j){</span><br><span class="line">                    <span class="keyword">if</span>(we){</span><br><span class="line">                        s+=a[l]-we;</span><br><span class="line">                        we=<span class="number">0</span>;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        we=a[l];</span><br><span class="line">                }</span><br><span class="line">            <span class="keyword">if</span>(m>s)</span><br><span class="line">                m=s;</span><br><span class="line">        }</span><br><span class="line">    <span class="built_in">cout</span><<m<<<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：因为只有两条单人皮艇，可以排除坐单人皮艇的两个人，剩下的数排序并求出相邻两数差值的和$sum$（最小的稳定性一定是排序后两两相邻数的差值之和），求出做小的$sum$&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 SP54 【JULKA - Julka】</title>
    <link href="https://yuygfgg.ml/2020/05/10/solution-sp54/"/>
    <id>https://yuygfgg.ml/2020/05/10/solution-sp54/</id>
    <published>2020-05-10T12:27:58.000Z</published>
    <updated>2020-05-10T12:54:12.485Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>有十组数据，每次输出$(a+b)/2$和$(a-b)/2$即可</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">10</span>;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>a>>b;</span><br><span class="line">        <span class="built_in">cout</span><<(a+b)/<span class="number">2</span><<<span class="built_in">endl</span><<(a-b)/<span class="number">2</span><<<span class="built_in">endl</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>于是：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1genmkjbutij305u05qmx7.jpg" alt="wa"></p><p>仔细一看：<strong>两数均为小于10^100的整数</strong></p><p>好吧，上高精</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><stdio.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><string></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><string.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><iostream></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//compare比较函数：相等返回0，大于返回1，小于返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(str1.length()>str2.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(str1.length()<str2.length())  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> str1.compare(str2);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//高精度加法</span></span><br><span class="line"><span class="comment">//只能是两个正数相加</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span><span class="comment">//高精度加法</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="comment">//前面补0，弄成长度相同</span></span><br><span class="line">    <span class="keyword">if</span>(len1<len2)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=len2-len1;i++)</span><br><span class="line">           str1=<span class="string">"0"</span>+str1;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=len1-len2;i++)</span><br><span class="line">           str2=<span class="string">"0"</span>+str2;</span><br><span class="line">    }</span><br><span class="line">    len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len1<span class="number">-1</span>;i>=<span class="number">0</span>;i--)</span><br><span class="line">    {</span><br><span class="line">        temp=str1[i]-<span class="string">'0'</span>+str2[i]-<span class="string">'0'</span>+cf;</span><br><span class="line">        cf=temp/<span class="number">10</span>;</span><br><span class="line">        temp%=<span class="number">10</span>;</span><br><span class="line">        str=<span class="keyword">char</span>(temp+<span class="string">'0'</span>)+str;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(cf!=<span class="number">0</span>)  str=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+str;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//高精度减法</span></span><br><span class="line"><span class="comment">//只能是两个正数相减，而且要大减小</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span><span class="comment">//高精度减法</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> tmp=str1.length()-str2.length();</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=str2.length()<span class="number">-1</span>;i>=<span class="number">0</span>;i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(str1[tmp+i]<str2[i]+cf)</span><br><span class="line">        {</span><br><span class="line">            str=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>+<span class="number">10</span>)+str;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            str=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>)+str;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tmp<span class="number">-1</span>;i>=<span class="number">0</span>;i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(str1[i]-cf>=<span class="string">'0'</span>)</span><br><span class="line">        {</span><br><span class="line">            str=<span class="keyword">char</span>(str1[i]-cf)+str;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            str=<span class="keyword">char</span>(str1[i]-cf+<span class="number">10</span>)+str;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    str.erase(<span class="number">0</span>,str.find_first_not_of(<span class="string">'0'</span>));<span class="comment">//去除结果中多余的前导0</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//高精度乘法</span></span><br><span class="line"><span class="comment">//只能是两个正数相乘</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="built_in">string</span> tempstr;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i>=<span class="number">0</span>;i--)</span><br><span class="line">    {</span><br><span class="line">        tempstr=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> temp=str2[i]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(temp!=<span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=len2<span class="number">-1</span>-i;j++)</span><br><span class="line">              tempstr+=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=len1<span class="number">-1</span>;j>=<span class="number">0</span>;j--)</span><br><span class="line">            {</span><br><span class="line">                t=(temp*(str1[j]-<span class="string">'0'</span>)+cf)%<span class="number">10</span>;</span><br><span class="line">                cf=(temp*(str1[j]-<span class="string">'0'</span>)+cf)/<span class="number">10</span>;</span><br><span class="line">                tempstr=<span class="keyword">char</span>(t+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(cf!=<span class="number">0</span>) tempstr=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">        }</span><br><span class="line">        str=add(str,tempstr);</span><br><span class="line">    }</span><br><span class="line">    str.erase(<span class="number">0</span>,str.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//高精度除法</span></span><br><span class="line"><span class="comment">//两个正数相除，商为quotient,余数为residue</span></span><br><span class="line"><span class="comment">//需要高精度减法和乘法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2,<span class="built_in">string</span> &quotient,<span class="built_in">string</span> &residue)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    quotient=residue=<span class="string">""</span>;<span class="comment">//清空</span></span><br><span class="line">    <span class="keyword">if</span>(str2==<span class="string">"0"</span>)<span class="comment">//判断除数是否为0</span></span><br><span class="line">    {</span><br><span class="line">        quotient=residue=<span class="string">"ERROR"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(str1==<span class="string">"0"</span>)<span class="comment">//判断被除数是否为0</span></span><br><span class="line">    {</span><br><span class="line">        quotient=residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> res=compare(str1,str2);</span><br><span class="line">    <span class="keyword">if</span>(res<<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        quotient=<span class="string">"0"</span>;</span><br><span class="line">        residue=str1;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(res==<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        quotient=<span class="string">"1"</span>;</span><br><span class="line">        residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">        <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">        <span class="built_in">string</span> tempstr;</span><br><span class="line">        tempstr.append(str1,<span class="number">0</span>,len2<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i<len1;i++)</span><br><span class="line">        {</span><br><span class="line">            tempstr=tempstr+str1[i];</span><br><span class="line">            tempstr.erase(<span class="number">0</span>,tempstr.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">            <span class="keyword">if</span>(tempstr.empty())</span><br><span class="line">              tempstr=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">char</span> ch=<span class="string">'9'</span>;ch>=<span class="string">'0'</span>;ch--)<span class="comment">//试商</span></span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">string</span> str,tmp;</span><br><span class="line">                str=str+ch;</span><br><span class="line">                tmp=mul(str2,str);</span><br><span class="line">                <span class="keyword">if</span>(compare(tmp,tempstr)<=<span class="number">0</span>)<span class="comment">//试商成功</span></span><br><span class="line">                {</span><br><span class="line">                    quotient=quotient+ch;</span><br><span class="line">                    tempstr=sub(tempstr,tmp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        residue=tempstr;</span><br><span class="line">    }</span><br><span class="line">    quotient.erase(<span class="number">0</span>,quotient.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">if</span>(quotient.empty()) quotient=<span class="string">"0"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">10</span>;i++)</span><br><span class="line">     {</span><br><span class="line">         <span class="built_in">string</span> a=<span class="string">""</span>,b=<span class="string">""</span>,ans=<span class="string">""</span>,r=<span class="string">""</span>;</span><br><span class="line">         <span class="built_in">cin</span>>>a>>b;</span><br><span class="line">         div(add(a,b),<span class="string">"2"</span>,ans,r);</span><br><span class="line">         <span class="built_in">cout</span><<ans<<<span class="built_in">endl</span>;</span><br><span class="line">         div(sub(a,b),<span class="string">"2"</span>,ans,r);</span><br><span class="line">         <span class="built_in">cout</span><<ans<<<span class="built_in">endl</span>;</span><br><span class="line">     }</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>倒霉的C++党啊</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有十组数据，每次输出$(a+b)/2$和$(a-b)/2$即可&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF315B 【Sereja and Array】</title>
    <link href="https://yuygfgg.ml/2020/05/10/solution-cf315b/"/>
    <id>https://yuygfgg.ml/2020/05/10/solution-cf315b/</id>
    <published>2020-05-10T11:51:20.000Z</published>
    <updated>2020-05-10T12:53:57.009Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>看到第一眼——线段树？？？</p><a id="more"></a><p><del>出于pj-</del> 我不会，只好直接打暴力</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pls</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<a.size();i++){</span><br><span class="line">        a[i]+=x;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> n,m,x,op,k;</span><br><span class="line">    <span class="built_in">cin</span>>>n>>m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i<n;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>x;</span><br><span class="line">        a.push_back(x);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i<m;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">3</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x;</span><br><span class="line">            <span class="built_in">cout</span><<a[x<span class="number">-1</span>]<<<span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">2</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x;</span><br><span class="line">            pls(x);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x>>k;</span><br><span class="line">            a[x<span class="number">-1</span>]=k;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>恭喜：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1genlcefdyyj312i0a6wex.jpg" alt="tle"></p><p>于是肯定要加一点优化，但我不会线段树，于是：</p><ul><li>经过简单观察，发现操作2号耗时最大，就想办法优化</li></ul><p>基本思路：由于是全数组而非部分+，可以用<code>pos</code>变量记录“调整量”，使得不需要每一次操作2都遍历一遍数组</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> n,m,x,op,k,pos=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>>>n>>m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i<n;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>x;</span><br><span class="line">        a.push_back(x);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i<m;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>op;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">3</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x;</span><br><span class="line">            <span class="built_in">cout</span><<a[x<span class="number">-1</span>]+pos<<<span class="built_in">endl</span>;<span class="comment">//输出时加上“调整量”</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">2</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x;</span><br><span class="line">            pos+=x;<span class="comment">//调整量增加</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>){</span><br><span class="line">            <span class="built_in">cin</span>>>x>>k;</span><br><span class="line">            a[x<span class="number">-1</span>]=k-pos;<span class="comment">//直接赋值，要取消调整量的影响，需要减去调整量，否则后面如果要输出是会多“当前的pos”</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到第一眼——线段树？？？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>chen_zhe ak ioi!</title>
    <link href="https://yuygfgg.ml/2020/05/05/cz-ak-ioi/"/>
    <id>https://yuygfgg.ml/2020/05/05/cz-ak-ioi/</id>
    <published>2020-05-05T13:52:25.000Z</published>
    <updated>2020-05-10T06:01:47.149Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>学【老虎叫】语</p><a id="more"></a><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Chen Zhe AKs IOI.</span><br><span class="line">Chen Zhe AKed IOI.</span><br><span class="line">Chen Zhe will AK IOI.</span><br><span class="line">Chen Zhe would AK IOI.</span><br><span class="line">Chen Zhe is AKing IOI.</span><br><span class="line">Chen Zhe was AKing IOI.</span><br><span class="line">Chen Zhe will be AKing IOI.</span><br><span class="line">Chen Zhe would be AKing IOI.</span><br><span class="line">Chen Zhe has AKed IOI.</span><br><span class="line">Chen Zhe had AKed IOI.</span><br><span class="line">Chen Zhe will have AKed IOI.</span><br><span class="line">Chen Zhe would have AKed IOI.</span><br><span class="line">Chen Zhe has been AKing IOI.</span><br><span class="line">Chen Zhe had been AKing IOI.</span><br><span class="line">Chen Zhe will have been AKing IOI.</span><br><span class="line">Chen Zhe would have been AKing IOI.</span><br><span class="line">IOI is AKed by Chen Zhe.</span><br><span class="line">IOI was AKed by Chen Zhe.</span><br><span class="line">IOI will be AKed by Chen Zhe.</span><br><span class="line">IOI would be AKed by Chen Zhe.</span><br><span class="line">IOI is being AKed by Chen Zhe.</span><br><span class="line">IOI was being AKed by Chen Zhe.</span><br><span class="line">IOI will be being AKed by Chen Zhe.</span><br><span class="line">IOI would be being AKed by Chen Zhe.</span><br><span class="line">IOI has been AKed by Chen Zhe.</span><br><span class="line">IOI had been AKed by Chen Zhe.</span><br><span class="line">IOI will have been AKed by Chen Zhe.</span><br><span class="line">IOI would have been AKed by Chen Zhe.</span><br><span class="line">IOI has been being AKed by Chen Zhe.</span><br><span class="line">IOI had been being AKed by Chen Zhe.</span><br><span class="line">IOI will have been being AKed by Chen Zhe.</span><br><span class="line">IOI would have been being AKed by Chen Zhe.</span><br><span class="line">Chen Zhe can AK IOI.</span><br><span class="line">Chen Zhe could AK IOI.</span><br><span class="line">Chen Zhe must AK IOI.</span><br><span class="line">Chen Zhe has to AK IOI.</span><br><span class="line">Chen Zhe had to AK IOI.</span><br><span class="line">Chen Zhe will have to AK IOI.</span><br><span class="line">Chen Zhe would have to AK IOI.</span><br><span class="line">Chen Zhe has had to AK IOI.</span><br><span class="line">Chen Zhe had had to AK IOI.</span><br><span class="line">Chen Zhe will have had to AK IOI.</span><br><span class="line">Chen Zhe would have had to AK IOI.</span><br><span class="line">Chen Zhe need to AK IOI.</span><br><span class="line">Chen Zhe dares to AK IOI.</span><br><span class="line">Chen Zhe used to AK IOI.</span><br><span class="line">Chen Zhe is used to AKing IOI.</span><br><span class="line">Chen Zhe is bound to AK IOI.</span><br><span class="line">IOI can be AKed by Chen Zhe.</span><br><span class="line">IOI could be AKed by Chen Zhe.</span><br><span class="line">IOI must be AKed by IOI.</span><br><span class="line">IOI has to be AKed by Chen Zhe.</span><br><span class="line">IOI had to be AKed by Chen Zhe.</span><br><span class="line">IOI will have to be AKed by Chen Zhe.</span><br><span class="line">IOI would have to be AKed by Chen Zhe.</span><br><span class="line">IOI has had to be AKed by Chen Zhe.</span><br><span class="line">IOI had had to be AKed by Chen Zhe.</span><br><span class="line">IOI will have had to be AKed by Chen Zhe.</span><br><span class="line">IOI would have had to be AKed by Chen Zhe.</span><br><span class="line">IOI need to be AKed by Chen Zhe.</span><br><span class="line">IOI dares to be AKed by Chen Zhe.</span><br><span class="line">IOI used to be AKed by Chen Zhe.</span><br><span class="line">IOI is used to being AKed by Chen Zhe.</span><br><span class="line">IOI is bound to be AKed by Chen Zhe.</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学【老虎叫】语&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="恶搞" scheme="https://yuygfgg.ml/tags/%E6%81%B6%E6%90%9E/"/>
    
  </entry>
  
  <entry>
    <title>洛谷管理真名</title>
    <link href="https://yuygfgg.ml/2020/05/04/LUOGU/"/>
    <id>https://yuygfgg.ml/2020/05/04/LUOGU/</id>
    <published>2020-05-04T07:23:35.000Z</published>
    <updated>2020-05-05T07:18:53.220Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>专业人肉100年</p><a id="more"></a><p>kkksc03真名：汪楚奇 男 约1995</p><p>lin_toto真名：林方正 约1999</p><p>StudyingFather真名：张书豪 男 约2003</p><p>chen_zhe真名：陈哲 男 约2004</p><p>xht37真名：徐皓天 男 约2003</p><p>NaCly_Fish真名：李峻枫 男 约2002</p><p>zhouwc真名：周炜程 男 约2003</p><p>noip真名：李欣隆 男 2001.3.11</p><p>ComeIntoPower真名：袁方舟 男 约2001</p><p>CYJian真名：陈胤戬 男 约2003</p><p>FlierKing真名：周永隆 男 约2000</p><p>zcysky真名：周辰宇 男 约2001</p><p>soha真名：金少海 ? 约2000</p><p>darkflames真名：？ 约1990（?）</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;专业人肉100年&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>macos下VScode的配置</title>
    <link href="https://yuygfgg.ml/2020/05/04/vscode-macos/"/>
    <id>https://yuygfgg.ml/2020/05/04/vscode-macos/</id>
    <published>2020-05-04T07:23:35.000Z</published>
    <updated>2020-05-11T13:24:34.816Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>最近花了两天时间配置了一下VScode，这里简单记一下</p><a id="more"></a><h2 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h2><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="用coderunner插件"><a href="#用coderunner插件" class="headerlink" title="用coderunner插件"></a>用coderunner插件</h4><ul><li><p>点左边栏里<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotfu33ugj302601o0sk.jpg" alt="app">，在输入框搜索coderunner，安装，点左上即可运行</p></li><li><p>为了更好的输入，打开设置（按f1搜settings），搜索run in terminal，打上勾即可<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot2qhu5hj30ho03i3yr.jpg" alt="run in terminal"></p></li></ul><h4 id="用自带的运行"><a href="#用自带的运行" class="headerlink" title="用自带的运行"></a>用自带的运行</h4><ul><li>配置完调试后按ctrl（<strong>注意不是cmd</strong>）+F5</li></ul><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>我不明白网上讲那么复杂干啥，不就是c,v嘛（（</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ul><li>在当前文件夹中新建一个叫.vscode的文件夹（不要在finder里建，直接在左边栏摁<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot289fe3j3016012web.jpg" alt="newfile">建）</li><li>在.vscode里建这些文件</li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot1su32vj30b8056jrq.jpg" alt="files"></p><ul><li><p>c_cpp_properties：<a href="https://www.luogu.com.cn/paste/2zlc21yf" target="_blank" rel="noopener">this</a></p></li><li><p>launch：<a href="https://www.luogu.com.cn/paste/drss6lff" target="_blank" rel="noopener">this</a></p></li><li><p>settings：<a href="https://www.luogu.com.cn/paste/a379qcz1" target="_blank" rel="noopener">this</a></p></li><li><p>tasks：<a href="https://www.luogu.com.cn/paste/67o4nuud" target="_blank" rel="noopener">this</a></p></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>安装c/c++、codelldb两个插件，方法同coderunner<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot3q5jj0j30ow032q3f.jpg" alt="codelldb"><br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot410yd1j30ow02ywez.jpg" alt="c/c++"></li></ul><p>然后就可以按F5调试啦～</p><h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><h4 id="编辑器与窗口管理"><a href="#编辑器与窗口管理" class="headerlink" title="编辑器与窗口管理"></a>编辑器与窗口管理</h4><ul><li>打开 cmd+O</li><li>新窗口 cmd+Shift+N</li><li>新标签页 cmd+N</li><li>关闭整个VSC窗口 cmd+Shift+W</li><li>关闭当前标签页 cmd+W</li><li>重新打开刚刚关闭的标签页 cmd+Shift+T</li><li>切换标签页 cmd+Tab</li><li>在前三个编辑器之间切换 cmd+1 2 3</li><li>将焦点编辑器移动位置  cmd+Alt+←→ 或 cmd+shift+[/]</li><li>在标签页之间切换 Alt+1~9</li></ul><h4 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h4><ul><li>搜索 cmd+F</li><li>替换 cmd+alt+f</li><li>复制光标所在行 只需双击当前行并按下cmd+C即可。</li><li>去掉行尾空格 cmd+K 然后 cmd+X</li><li>切换行注释(可多行) cmd+/</li><li>代码缩进 cmd+[ 或 cmd+]</li><li>当前行上下移动 Alt+↑↓</li><li>当前行后插入一行 cmd+Enter</li><li>当前行前插入一行 cmd+Shift+Enter</li><li>选中下个高亮的匹配项 cmd+D</li><li>多光标模式 Atl+鼠标单击即可在单击处创建新的光标</li><li>速览定义 Alt+F12</li><li>Zen模式 cmd+K 然后 cmd+Z</li></ul><h3 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h3><h4 id="需要插件："><a href="#需要插件：" class="headerlink" title="需要插件："></a>需要插件：<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot4ixh1zj30oq03c0t6.jpg" alt="c++ intellisense"></h4><p>效果：</p><ul><li><p>函数预览 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot53igsyj3106072wft.jpg" alt="func"></p></li><li><p>大纲</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot0xujw6j30p21mgn1s.jpg" alt="ee"></p><ul><li>代码提示</li></ul><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosyqybvqj30ny0e80u6.jpg" alt="code"></p><h3 id="VSCODE-luogu"><a href="#VSCODE-luogu" class="headerlink" title="VSCODE luogu"></a>VSCODE luogu</h3><h4 id="需要插件"><a href="#需要插件" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotarpnkfj30om02qmxk.jpg" alt="vscode luogu"></h4><p>见<a href="https://github.com/yltx/vscode-luogu/wiki" target="_blank" rel="noopener">这里</a></p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><h4 id="需要插件-1"><a href="#需要插件-1" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geotd9dfu2j30ok038t9c.jpg" alt="git"></h4><ul><li>集成git到VSCODE（本人是蒟蒻，还不怎么会用） <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosxhe36gj31hc0u01kx.jpg" alt="git"></li></ul><h3 id="markdown支持增强"><a href="#markdown支持增强" class="headerlink" title="markdown支持增强"></a>markdown支持增强</h3><h4 id="需要插件-2"><a href="#需要插件-2" class="headerlink" title="需要插件 "></a>需要插件 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot5t3fpej30oq062ab7.jpg" alt="mds"></h4><ul><li>markdown预览、高亮 <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geosy9h606j31hc0u04qp.jpg" alt="md"><br><a href="https://www.luogu.com.cn/paste/7v6my3kn" target="_blank" rel="noopener">它对语法的检查非常严格，为了给大家参考，贡献本文的 <code>0err 0war</code> markdown源码</a></li></ul><h3 id="自定义代码片段"><a href="#自定义代码片段" class="headerlink" title="自定义代码片段"></a>自定义代码片段</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot680kv8j3176032jrj.jpg" alt="usr sn 1"> 然后按enter就出来了<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot6qc6p9j316g06uwf2.jpg" alt="usr sn 2"></p><h4 id="按F1搜索user-sn-按enter，选C-json，按enter编辑"><a href="#按F1搜索user-sn-按enter，选C-json，按enter编辑" class="headerlink" title="按F1搜索user sn  按enter，选C++.json，按enter编辑"></a>按F1搜索<code>user sn</code> <img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot9ldpyyj30rw046t95.jpg" alt="usr sn search"> 按enter，选C++.json，按enter编辑</h4><p>e.g</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">{</span><br><span class="line">     <span class="attr">"sc"</span>: {</span><br><span class="line">        <span class="attr">"prefix"</span>: <span class="string">"sc"</span>,<span class="comment">//“召唤”键</span></span><br><span class="line">        <span class="attr">"body"</span>: [<span class="comment">//$(num)为光标路径，结尾必须有一个</span></span><br><span class="line">            <span class="string">"#include<bits/stdc++.h>"</span>,</span><br><span class="line">            <span class="string">"using namespace std;\n$1"</span>,</span><br><span class="line">            <span class="string">"int main(){\n\t$2"</span>,</span><br><span class="line">            <span class="string">"}"</span>,</span><br><span class="line">            <span class="string">"$3"</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"description"</span>: <span class="string">"start"</span><span class="comment">//描述</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p>我装了这些插件，仅供参考</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geoszm4122j30om1aaak1.jpg" alt="vw"></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li><p>编辑<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot02bv5vj31hc0u0qsm.jpg" alt="edit"></p></li><li><p>调试<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1geot0h32nyj31hc0u0kb0.jpg" alt="debug"></p></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://blog.csdn.net/justidle/article/details/105157419" target="_blank" rel="noopener">https://blog.csdn.net/justidle/article/details/105157419</a></p></li><li><p><a href="https://www.luogu.com.cn/blog/crab-in-northeast/great-features-and-plugins-for-vscode" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/crab-in-northeast/great-features-and-plugins-for-vscode</a></p></li><li><p><a href="https://www.luogu.com.cn/blog/GNAQ/VSC-guide" target="_blank" rel="noopener">https://www.luogu.com.cn/blog/GNAQ/VSC-guide</a></p></li></ul></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近花了两天时间配置了一下VScode，这里简单记一下&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="工具" scheme="https://yuygfgg.ml/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF903C 【Boxes Packing】</title>
    <link href="https://yuygfgg.ml/2020/05/04/solution-cf903c/"/>
    <id>https://yuygfgg.ml/2020/05/04/solution-cf903c/</id>
    <published>2020-05-04T02:08:28.000Z</published>
    <updated>2020-05-04T02:11:07.455Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：求有几个上升序列，每一个都要尽量长</p><a id="more"></a><p>step1:用multiset排序</p><p>step2-1:如果没有相同的元素，上升序列数为1</p><p>step2-2:有x个元素相同，则结论就是max(x)</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans=<span class="number">1</span>,sum=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">multiset</span><<span class="keyword">int</span>> a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="built_in">cin</span>>>n;</span><br><span class="line">    a.insert(<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>tmp;</span><br><span class="line">        a.insert(tmp);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">set</span><<span class="keyword">int</span>>::iterator it=a.begin();</span><br><span class="line">    <span class="built_in">set</span><<span class="keyword">int</span>>::iterator it2=it;</span><br><span class="line">    it++;</span><br><span class="line">    <span class="keyword">for</span>(;it!=a.end();it++,it2++){</span><br><span class="line">        <span class="keyword">if</span>(*it2==*it){</span><br><span class="line">            sum++;</span><br><span class="line">            ans=max(ans,sum);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> sum=<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span><<ans<<<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：求有几个上升序列，每一个都要尽量长&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF490A 【Team Olympiad】</title>
    <link href="https://yuygfgg.ml/2020/04/23/solution-CF490a%20/"/>
    <id>https://yuygfgg.ml/2020/04/23/solution-CF490a%20/</id>
    <published>2020-04-23T12:35:30.000Z</published>
    <updated>2020-05-02T02:40:32.408Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：输入x，就在对应的桶+1，然后去一个尽可能大的长度，但需要满足三个桶都有这么多。</p><a id="more"></a><p>发现洛谷题解里啥vector,队列都来了，正宗的用来干这事的map表示:喵喵喵？</p><p>所以，我决定写一篇map题解</p><p>由于可能键值会重复（我也不确定qwq），所以用multimap</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> cnt1,cnt2,cnt3,n,x;</span><br><span class="line"><span class="built_in">multimap</span><<span class="keyword">int</span>,<span class="keyword">int</span>> num1,num2,num3;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&x);</span><br><span class="line">        <span class="comment">//分别找对应的桶+1</span></span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>){</span><br><span class="line">num1.insert(make_pair(++cnt1,i));<span class="comment">//没有重载[]，这是标准插入方法</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">2</span>){</span><br><span class="line">num2.insert(make_pair(++cnt2,i));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">3</span>){</span><br><span class="line">num3.insert(make_pair(++cnt3,i));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> ans=min(cnt1,min(cnt2,cnt3));<span class="comment">//找出有几组</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);<span class="comment">//输出组数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=ans;i++){<span class="comment">//输出位置</span></span><br><span class="line"><span class="built_in">cout</span><<num1.find(i)->second<<<span class="string">" "</span><<num2.find(i)->second<<<span class="string">" "</span><<num3.find(i)->second<<<span class="built_in">endl</span>;/没有重载[]，这是标准输出方法</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：输入x，就在对应的桶+1，然后去一个尽可能大的长度，但需要满足三个桶都有这么多。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF412C 【Pattern】</title>
    <link href="https://yuygfgg.ml/2020/04/17/solution-cf412c/"/>
    <id>https://yuygfgg.ml/2020/04/17/solution-cf412c/</id>
    <published>2020-04-17T12:35:30.000Z</published>
    <updated>2020-05-02T02:40:17.716Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>tips:不要以为样例没过就一定错</p><p>思路：什么也匹配不上的输出’?’，否则随便输出一个除了’?’的字母（这里是’a’）</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>>>n>>a;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<n;j++){</span><br><span class="line"><span class="built_in">cin</span>>>b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<a.size();i++){</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'?'</span>){</span><br><span class="line">a[i]=b[i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'.'</span>){</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">if</span>(a[i]!=b[i]&&b[i]!=<span class="string">'?'</span>){</span><br><span class="line">a[i]=<span class="string">'.'</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i<a.size();i++){</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'.'</span>){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">'?'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">'?'</span>){</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">'a'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">cout</span><<a[i];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tips:不要以为样例没过就一定错&lt;/p&gt;
&lt;p&gt;思路：什么也匹配不上的输出’?’，否则随便输出一个除了’?’的字母（这里是’a’）&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 AT2654 【[ARC078A] Splitting Pile】</title>
    <link href="https://yuygfgg.ml/2020/04/04/solution-arc078a/"/>
    <id>https://yuygfgg.ml/2020/04/04/solution-arc078a/</id>
    <published>2020-04-04T09:55:55.000Z</published>
    <updated>2020-05-02T02:40:03.375Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：暴力求出所有可能，排序求最小绝对值差。</p><p>我用vector存储卡的信息，用set排序</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">long</span> <span class="keyword">long</span>> a;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">long</span>> b;<span class="comment">//自动从小到大排序</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> n,tmp;</span><br><span class="line"><span class="built_in">cin</span>>>n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;<span class="comment">//由于空间大小不定，只能用push_back函数放入</span></span><br><span class="line">a.push_back(tmp);</span><br><span class="line">s+=tmp;</span><br><span class="line">}</span><br><span class="line">    <span class="comment">//现在开始空间大小一定，可以用从0开始的下标访问</span></span><br><span class="line">x=a[<span class="number">0</span>];</span><br><span class="line">y=s-a[<span class="number">0</span>];</span><br><span class="line">b.insert(<span class="built_in">abs</span>(x-y));<span class="comment">//插入第一个</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i<n<span class="number">-1</span>;i++){</span><br><span class="line">x+=a[i];</span><br><span class="line">y-=a[i];</span><br><span class="line">b.insert(<span class="built_in">abs</span>(x-y));<span class="comment">//插入set</span></span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<*b.begin()<<<span class="built_in">endl</span>;<span class="comment">//输出自动排序好的最小数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：暴力求出所有可能，排序求最小绝对值差。&lt;/p&gt;
&lt;p&gt;我用vector存储卡的信息，用set排序&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF149A 【Business trip】</title>
    <link href="https://yuygfgg.ml/2020/04/04/solution-cf149a/"/>
    <id>https://yuygfgg.ml/2020/04/04/solution-cf149a/</id>
    <published>2020-04-04T01:42:09.000Z</published>
    <updated>2020-05-02T02:40:46.077Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：贪心。要让浇水的月份最少，就要让每个浇水月收益最大，所以做法是先将每个月的收益从大到小排序，尽量在收益大的月份浇水。</p><p>用multiset排序，每次取第i大累加直到满足要求即可</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">multiset</span><<span class="keyword">int</span>> a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> n,tmp,d=<span class="number">0</span>,s=<span class="number">0</span>,k;</span><br><span class="line"><span class="built_in">cin</span>>>k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">12</span>;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;<span class="comment">//输入临时变量再插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">0</span>){<span class="comment">//目标为0的话直接输出0</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="number">0</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>>::iterator it=a.end();<span class="comment">//指向最大值的iterator</span></span><br><span class="line">it--;<span class="comment">//.end()指向的是最大值还要后面一个，所以要--</span></span><br><span class="line"><span class="keyword">for</span>(;it!=a.begin();it--){</span><br><span class="line">d+=*it;</span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">if</span>(d>=k){<span class="comment">//完成</span></span><br><span class="line"><span class="built_in">cout</span><<s<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">d+=*it;<span class="comment">//如果不补一次循环，第一个元素不会被遍历到</span></span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">if</span>(d>=k){<span class="comment">//完成</span></span><br><span class="line"><span class="built_in">cout</span><<s<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="number">-1</span><<<span class="built_in">endl</span>;<span class="comment">//无法完成目标</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：贪心。要让浇水的月份最少，就要让每个浇水月收益最大，所以做法是先将每个月的收益从大到小排序，尽量在收益大的月份浇水。&lt;/p&gt;
&lt;p&gt;用multiset排序，每次取第i大累加直到满足要求即可&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF919A 【Supermarket】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-cf919a/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-cf919a/</id>
    <published>2020-04-03T12:45:37.000Z</published>
    <updated>2020-05-02T02:41:01.622Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：贪心，找单价最便宜的超市买即可</p><p>用set从小到大排序</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">double</span>> c;<span class="comment">//自动从小到大排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> m,n;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span>>>m>>n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=m;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>a>>b;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> tmp=((<span class="keyword">long</span> <span class="keyword">double</span>)a/b);</span><br><span class="line">        c.insert(tmp*n*<span class="number">1.0</span>);<span class="comment">//插入（*1.0用来强制类型转换，否则插入set的数是向下取整的int）</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">set</span><<span class="keyword">long</span> <span class="keyword">double</span>>::iterator it=c.begin();<span class="comment">//最便宜超市的单价</span></span><br><span class="line">    <span class="built_in">cout</span><<fixed<<setprecision(<span class="number">10</span>)<<*it<<<span class="built_in">endl</span>;<span class="comment">//保留十位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：贪心，找单价最便宜的超市买即可&lt;/p&gt;
&lt;p&gt;用set从小到大排序&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 SP11515 【BUSYMAN - I AM VERY BUSY】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-sp11515/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-sp11515/</id>
    <published>2020-04-03T06:35:01.000Z</published>
    <updated>2020-04-13T12:48:43.519Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>这题是特别水的贪心，可以用自动排序的set实现</p><p>主要思路：将所有活动按结束时间从小到大排序，能进行活动就进行，遇到不能的就结束</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>{</span></span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cmp</span>{</span><span class="comment">//比较函数类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> data& x,<span class="keyword">const</span> data& y)</span></span>{</span><br><span class="line">            <span class="keyword">if</span>(x.b==y.b)<span class="comment">//如果结束时间一样就按开始时间排</span></span><br><span class="line">        <span class="keyword">return</span> x.a<y.a;</span><br><span class="line">    <span class="keyword">return</span> x.b<y.b;<span class="comment">//否则就按结束时间排</span></span><br><span class="line">        }</span><br><span class="line">};</span><br><span class="line"><span class="built_in">set</span><data,cmp> a;<span class="comment">//自动按比较函数类排序</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> n,t,ans,last;</span><br><span class="line"><span class="built_in">cin</span>>>n;</span><br><span class="line">data tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=t;j++){<span class="comment">//由于空间大小是set自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line"><span class="built_in">cin</span>>>tmp.a>>tmp.b;</span><br><span class="line">a.insert(tmp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">set</span><data>::iterator it=a.begin();<span class="comment">//指向开始的迭代器</span></span><br><span class="line">ans=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">last=INT_MIN;</span><br><span class="line"><span class="keyword">for</span>(;it!=a.end();it++){</span><br><span class="line"><span class="keyword">if</span>((*it).a>=last){<span class="comment">//来得及</span></span><br><span class="line">ans++;<span class="comment">//能去的加一</span></span><br><span class="line"><span class="comment">//cout<<i<<" "<<ans<<"eee"<<(*it).a<<" "<<(*it).b<<endl;</span></span><br><span class="line">last=(*it).b;<span class="comment">//更新上一次的结束时间</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<ans<<<span class="built_in">endl</span>;</span><br><span class="line">a.clear();<span class="comment">//insert会插入，不会覆盖，所以要清空set</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这题是特别水的贪心，可以用自动排序的set实现&lt;/p&gt;
&lt;p&gt;主要思路：将所有活动按结束时间从小到大排序，能进行活动就进行，遇到不能的就结束&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF230A 【Dragons】</title>
    <link href="https://yuygfgg.ml/2020/04/03/solution-cf230a/"/>
    <id>https://yuygfgg.ml/2020/04/03/solution-cf230a/</id>
    <published>2020-04-03T03:06:09.000Z</published>
    <updated>2020-04-13T12:48:27.962Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>用贪心的策略，每次打最小的龙</p><p>这里用会自动排序的set实现。</p><a id="more"></a><p>具体见代码</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dr</span>{</span></span><br><span class="line"><span class="keyword">int</span> x,y;<span class="comment">//龙的结构体</span></span><br><span class="line">};</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">drcmp</span>{</span><span class="comment">//比较函数类</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="keyword">const</span> dr& a,<span class="keyword">const</span> dr& b)</span></span>{</span><br><span class="line">            <span class="keyword">return</span> a.x<=b.x;<span class="comment">//注意，要<=，不是<</span></span><br><span class="line">        }</span><br><span class="line">};</span><br><span class="line"><span class="built_in">set</span><dr,drcmp> a;<span class="comment">//存龙的信息的set，使用自定义比较函数类</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> f,n;</span><br><span class="line"><span class="built_in">cin</span>>>f>>n;</span><br><span class="line">dr tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp.x>>tmp.y;<span class="comment">//输入临时变量在插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">set</span><dr>::iterator it=a.begin();<span class="comment">//定义指向开头（最小）的迭代器</span></span><br><span class="line"><span class="keyword">for</span>(;it!=a.end();it++){</span><br><span class="line"><span class="keyword">if</span>(f>(*it).x) f+=(*it).y;<span class="comment">//现有力量值足够，加上额外获得的（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="keyword">else</span>{<span class="comment">//不能，输出，结束</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"NO"</span><<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"YES"</span><<<span class="built_in">endl</span>;<span class="comment">//能进入下一层</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用贪心的策略，每次打最小的龙&lt;/p&gt;
&lt;p&gt;这里用会自动排序的set实现。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF892A 【Greed】</title>
    <link href="https://yuygfgg.ml/2020/04/02/solution-cf892a/"/>
    <id>https://yuygfgg.ml/2020/04/02/solution-cf892a/</id>
    <published>2020-04-02T13:06:28.000Z</published>
    <updated>2020-04-13T12:48:11.470Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>把所有可乐倒进2个罐子里，那么肯定是选最大的两个罐子，再和总可乐数比较即可。</p><p>要自动排序又不会去重的数据结构当然选multiset</p><a id="more"></a><p>具体用法见代码<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">multiset</span><<span class="keyword">int</span>> a;<span class="comment">//自动从小到大排序但不会去重的数据结构</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tmp,n,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>>>n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;<span class="comment">//输入可乐数并累加</span></span><br><span class="line">sum+=tmp;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;<span class="comment">////由于空间大小是multiset自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">multiset</span><<span class="keyword">int</span>>::iterator it=a.end();<span class="comment">//因为是从小到大排序，所以最大的在结尾处</span></span><br><span class="line">it--;<span class="comment">//.end()函数返回的iterator是最后一个元素还要后面一个，所以真正最大的要-1，但multiset::iterator不支持除++和--以外的运算，所以用--运算</span></span><br><span class="line"><span class="built_in">multiset</span><<span class="keyword">int</span>>::iterator it2=it;<span class="comment">//第二大</span></span><br><span class="line">it2--;<span class="comment">//同上</span></span><br><span class="line"><span class="keyword">if</span>(sum<=(*it+*it2)) <span class="built_in">cout</span><<<span class="string">"YES"</span><<<span class="built_in">endl</span>;<span class="comment">//装得下（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span><<<span class="string">"NO"</span><<<span class="built_in">endl</span>;<span class="comment">//装不下</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把所有可乐倒进2个罐子里，那么肯定是选最大的两个罐子，再和总可乐数比较即可。&lt;/p&gt;
&lt;p&gt;要自动排序又不会去重的数据结构当然选multiset&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 CF653A 【Bear and Three Balls】</title>
    <link href="https://yuygfgg.ml/2020/04/02/solution-cf653a/"/>
    <id>https://yuygfgg.ml/2020/04/02/solution-cf653a/</id>
    <published>2020-04-02T06:45:44.000Z</published>
    <updated>2020-04-13T12:45:33.546Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>思路：排序+去重，判断是否有连续的三个数</p><p>看到既要排序还要去重，当然用set啦</p><a id="more"></a><p>具体解释见代码<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>> a;<span class="comment">//这是一个自动排序+去重的数据结构</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>>>n;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;<span class="comment">//由于空间大小是set自动分配的，只能先输入临时变量再通过insert函数插入</span></span><br><span class="line">a.insert(tmp);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>>::iterator ed=a.end();<span class="comment">//不直接用.end()的原因看下面for语句的解释</span></span><br><span class="line">ed--;<span class="comment">//由于set::iterator不能用-=运算符，只能分两次--</span></span><br><span class="line">ed--;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span><<span class="keyword">int</span>>::iterator it=a.begin();it!=ed;it++){<span class="comment">//it为a.end()时it+1和+2处会越界，所以用前面相当于a.end()-2的iterator做边界</span></span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>>::iterator it2=it;<span class="comment">//it+1，因为set::iterator不支持+=或+，所以定义两个iterator分别代表it+1和it+2</span></span><br><span class="line">it2++;</span><br><span class="line"><span class="built_in">set</span><<span class="keyword">int</span>>::iterator it3=it2;<span class="comment">//it+2，理由同上</span></span><br><span class="line">it3++;</span><br><span class="line"><span class="keyword">if</span>(*it+<span class="number">1</span>==*it2&&*it2+<span class="number">1</span>==*it3){<span class="comment">//判断是否为连续三个数（访问iterator指向的元素要加*）</span></span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"YES"</span><<<span class="built_in">endl</span>;<span class="comment">//满足</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//结束</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"NO"</span><<<span class="built_in">endl</span>;<span class="comment">//不满足</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p></p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;思路：排序+去重，判断是否有连续的三个数&lt;/p&gt;
&lt;p&gt;看到既要排序还要去重，当然用set啦&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="题解" scheme="https://yuygfgg.ml/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>神虎牌删犇器</title>
    <link href="https://yuygfgg.ml/2020/03/28/shen-hu-pai-shan-ben-qi/"/>
    <id>https://yuygfgg.ml/2020/03/28/shen-hu-pai-shan-ben-qi/</id>
    <published>2020-03-28T09:55:45.000Z</published>
    <updated>2020-04-13T12:47:27.905Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li><p>按下键盘上的 <code>f12</code> 按键。</p></li><li><p>在右方控制栏中点击 <code>Console</code> 会出现可以输入的区域。</p></li><li><p>输入下方的这段代码。</p><a id="more"></a></li></ol><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">switchMode('my');</span><br><span class="line"><span class="function">function <span class="title">load</span><span class="params">()</span> </span>{</span><br><span class="line">console.log('page ' + feedPage);</span><br><span class="line">$.get(<span class="string">"/feed/"</span> + feedMode + <span class="string">"?page="</span> + feedPage, function (resp) {</span><br><span class="line">$feed.append(resp);</span><br><span class="line">$(<span class="string">"#feed-more"</span>).children(<span class="string">"a"</span>).text(<span class="string">"点击查看更多..."</span>)</span><br><span class="line">$(<span class="string">"[name=feed-delete]"</span>).click(function () {</span><br><span class="line">$.post("/api/feed/delete/" + $(this).attr('data-feed-id'), function () {</span><br><span class="line">switchMode('all');</span><br><span class="line">})</span><br><span class="line">}); feedPage++;</span><br><span class="line">if (resp.indexOf('没有更多动态了') != -1) console.log('finished');</span><br><span class="line"><span class="keyword">else</span> setTimeout(load, <span class="number">200</span>);</span><br><span class="line">});</span><br><span class="line">}</span><br><span class="line">setTimeout(load, <span class="number">1000</span>)</span><br></pre></td></tr></tbody></table></figure><ol><li><p>接着回车 <code>enter</code> 即可。</p></li><li><p>马上会出现一大串的数字，慢慢等待 <code>Page</code> 闪完后出现 <code>finish</code>。</p></li></ol><p>接着输入以下代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var l =  $('#feed > li > div.am-comment-main > header > div > a:nth-child(2)');</span><br><span class="line"><span class="function">function <span class="title">f</span><span class="params">(i)</span> </span>{</span><br><span class="line">$ .post("/api/feed/delete/"+ $(l[i]).attr('data-feed-id'), function() {</span><br><span class="line">console.<span class="built_in">log</span>(i);</span><br><span class="line"><span class="keyword">if</span>(i<l.length<span class="number">-1</span>)setTimeout(`f(${i+<span class="number">1</span>})`,<span class="number">200</span>);</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line">f(<span class="number">0</span>);</span><br></pre></td></tr></tbody></table></figure><ol><li>如果出现 <code>503</code> 界面重新再次<strong>重复上述过程</strong>。</li></ol><p>直到删完为止，重新加载整个界面，建议重启浏览器。</p><p>最后就完成了删犇的过程。</p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;按下键盘上的 &lt;code&gt;f12&lt;/code&gt; 按键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在右方控制栏中点击 &lt;code&gt;Console&lt;/code&gt; 会出现可以输入的区域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入下方的这段代码。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="洛谷" scheme="https://yuygfgg.ml/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="工具" scheme="https://yuygfgg.ml/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>关于BFS</title>
    <link href="https://yuygfgg.ml/2020/03/06/about-bfs/"/>
    <id>https://yuygfgg.ml/2020/03/06/about-bfs/</id>
    <published>2020-03-06T12:57:43.000Z</published>
    <updated>2020-04-13T12:44:40.042Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><del>他死了</del></p><a id="more"></a><p>BFS，即宽度优先搜索（balabala不讲无意义内容）<br>核心：用一个队列来记录“待办事项”，用最短路来举个例子，代码如下</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>};</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">5</span>]={<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>};</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1001</span>][<span class="number">1001</span>],q[<span class="number">250000</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> sx,sy,ex,ey;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>{</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'.'</span>) a[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'#'</span>) a[i][j]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'*'</span>){</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">ex=i;</span><br><span class="line">ey=j;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'@'</span>){</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">sx=i;</span><br><span class="line">sy=j;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> h=<span class="number">1</span>,t=<span class="number">1</span>,n,m;</span><br><span class="line"><span class="built_in">cin</span>>>n>>m;</span><br><span class="line">input(n,m);</span><br><span class="line">q[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">q[<span class="number">1</span>][<span class="number">1</span>]=sx;<span class="comment">//初始化“待办事项</span></span><br><span class="line">q[<span class="number">1</span>][<span class="number">2</span>]=sy;<span class="comment">//同上</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(h<=t){</span><br><span class="line"><span class="keyword">if</span>(q[h][<span class="number">1</span>]==ex&&q[h][<span class="number">2</span>]==ey){<span class="comment">//达到目标</span></span><br><span class="line"><span class="built_in">cout</span><<q[h][<span class="number">0</span>]<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=<span class="number">4</span>;i++){</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">x=q[h][<span class="number">1</span>]+dx[i];<span class="comment">//拿到事情</span></span><br><span class="line">y=q[h][<span class="number">2</span>]+dy[i];<span class="comment">//同上</span></span><br><span class="line"><span class="keyword">if</span>(a[x][y]==<span class="number">0</span>){<span class="comment">//做事</span></span><br><span class="line">t++;</span><br><span class="line">q[t][<span class="number">0</span>]=q[h][<span class="number">0</span>]+<span class="number">1</span>;<span class="comment">//产生新事</span></span><br><span class="line">q[t][<span class="number">1</span>]=x;<span class="comment">//同上</span></span><br><span class="line">q[t][<span class="number">2</span>]=y;<span class="comment">//同上</span></span><br><span class="line">a[x][y]=<span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">h++;<span class="comment">//做完了一件事</span></span><br><span class="line">}</span><br><span class="line">    <span class="comment">//无解</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里面没有用STL中的queue，但原理相同。<br>代码中每次穷举的是步数（即离终点的距离），一次while穷举一个步数。<br>可以看到，队列在while循环做完之前不为空（即有效解一定在穷举完所有步数之前得到），所以BFS的解一般是在循环内产生。<br>然后，我们用深搜（DFS）来实现一下<br></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">105</span>][<span class="number">105</span>],d[<span class="number">105</span>][<span class="number">105</span>],n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dg</span><span class="params">(<span class="keyword">int</span> dep,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>{</span><br><span class="line"><span class="keyword">if</span>(dep<d[i][j]&&dep<<span class="number">200</span>){</span><br><span class="line">d[i][j]=dep;</span><br><span class="line"><span class="keyword">if</span>(a[i][j+<span class="number">1</span>]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i,j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[i+<span class="number">1</span>][j]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i+<span class="number">1</span>,j);</span><br><span class="line"><span class="keyword">if</span>(a[i][j<span class="number">-1</span>]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i,j<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>][j]==<span class="number">0</span>) dg(dep+<span class="number">1</span>,i<span class="number">-1</span>,j);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>{</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=n;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<=m;j++){</span><br><span class="line"><span class="built_in">cin</span>>>tmp;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'.'</span>) a[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tmp==<span class="string">'#'</span>) a[i][j]=<span class="number">-1</span>;</span><br><span class="line">d[i][j]=INT_MAX;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">cin</span>>>n>>m;</span><br><span class="line">input(n,m);</span><br><span class="line">dg(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">cout</span><<d[n][m]<<<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><br>可以发现，DFS慢在于需要回溯，而且不做到底不回头，举个例子，正确路径是右右右右，而DFS永远先穷举左，产生大量无意义劳动，而BFS只需要循环4*4=16次，速度进步巨大。（所以DFS要加玄学限制:dep<200）<p></p></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;del&gt;他死了&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="学习笔记" scheme="https://yuygfgg.ml/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第一次做工程的成果</title>
    <link href="https://yuygfgg.ml/2020/03/05/first-project/"/>
    <id>https://yuygfgg.ml/2020/03/05/first-project/</id>
    <published>2020-03-05T12:08:02.000Z</published>
    <updated>2020-04-13T12:47:12.440Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>寒假里摸鱼的成果</p><a id="more"></a><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">坑点大全：</span></span><br><span class="line"><span class="comment">1.地图是25*25的，不是27*27的</span></span><br><span class="line"><span class="comment">2.x,y是行，列，不是列，行（可能某些地方做了转换） </span></span><br><span class="line"><span class="comment">3.p1在代码中还记作p1，但p2记作p0</span></span><br><span class="line"><span class="comment">4.p2(p0)代码中变量为p1的后面加数字1</span></span><br><span class="line"><span class="comment">5.重要！！重要！！！！重要！！！这个程序分4个线程，分别是打印地图，main函数，p1键盘侦测，p2（p0）键盘侦测</span></span><br><span class="line"><span class="comment">6.原来想做的事战略游戏（放置方块）（像皇室战争）所以障碍才分1-4，1、2归P1，3、4归P2，后来改成走迷宫，添加了6目标方块，还可以放障碍（1-4），后来变成放地雷，再变成自动生成地雷，最后水平不足，变成</span></span><br><span class="line"><span class="comment">自动生成障碍。</span></span><br><span class="line"><span class="comment">7.请未来的自己帮忙，其实自动行走是bug。（2020.1.25） </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><windows.h> </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string"><time.h></span></span></span><br><span class="line">COORD coord;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mapx=<span class="number">27</span>;</span><br><span class="line"><span class="keyword">bool</span> stop=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> maps[mapx][mapx];</span><br><span class="line">HANDLE hCon;</span><br><span class="line"><span class="keyword">int</span> p1ott,p1btt,p2ott,p2btt,pn=<span class="number">1</span>,x=<span class="number">2</span>,y=<span class="number">2</span>,ops,ops1,x1=<span class="number">2</span>,y1=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">enum</span> Color {DARKBLUE=<span class="number">1</span>,DARKGREEN,DARKTEAL,DARKRED,DARKPINK,DARKYELLOW,GRAY,DARKGRAY,BLUE,GREEN,TEAL,RED,PINK,YELLOW,WHITE};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">window</span><span class="params">()</span></span>{</span><br><span class="line">HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">CONSOLE_CURSOR_INFO CursorInfo;</span><br><span class="line">GetConsoleCursorInfo(handle,&CursorInfo);</span><br><span class="line">CursorInfo.bVisible=<span class="literal">false</span>;</span><br><span class="line">SetConsoleCursorInfo(handle,&CursorInfo); </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(Color c)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(hCon==<span class="literal">NULL</span>)</span><br><span class="line">    hCon=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleTextAttribute(hCon,c);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GoToxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    coord.X=x;</span><br><span class="line">    coord.Y=y;</span><br><span class="line">    HANDLE a=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleCursorPosition(a,coord);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">clrscr</span><span class="params">()</span></span>{ </span><br><span class="line">HANDLE hndl=GetStdHandle(STD_OUTPUT_HANDLE); </span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO csbi; </span><br><span class="line">GetConsoleScreenBufferInfo(hndl,&csbi); </span><br><span class="line">DWORD written; </span><br><span class="line">DWORD N=csbi.dwSize.X*csbi.dwCursorPosition.Y+csbi.dwCursorPosition.X+<span class="number">1</span>; </span><br><span class="line">COORD curhome={<span class="number">0</span>,<span class="number">0</span>}; </span><br><span class="line">FillConsoleOutputCharacter(hndl,<span class="string">' '</span>,N,curhome,&written); </span><br><span class="line">csbi.srWindow.Bottom-=csbi.srWindow.Top; </span><br><span class="line">csbi.srWindow.Top=<span class="number">0</span>; </span><br><span class="line">SetConsoleWindowInfo(hndl,TRUE,&csbi.srWindow); </span><br><span class="line">SetConsoleCursorPosition(hndl,curhome); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">keyboard</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP)&<span class="number">0x8000</span>)  </span><br><span class="line"><span class="keyword">return</span> <span class="string">'w'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN)&<span class="number">0x8000</span>)  </span><br><span class="line"><span class="keyword">return</span> <span class="string">'s'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_LEFT)&<span class="number">0x8000</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'a'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_RIGHT)&<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'d'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD8)&<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'i'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD5)&<span class="number">0x8000</span>)  </span><br><span class="line">    <span class="keyword">return</span> <span class="string">'k'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD4)&<span class="number">0x8000</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'j'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (GetAsyncKeyState(VK_NUMPAD6)&<span class="number">0x8000</span>)  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">'l'</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">to_ch_map</span><span class="params">(<span class="keyword">int</span> n)</span></span>{</span><br><span class="line"><span class="keyword">switch</span>(n){</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:<span class="keyword">return</span> <span class="string">'.'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> <span class="string">'@'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span> <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="keyword">return</span> <span class="string">'$'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">return</span> <span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="keyword">return</span> <span class="string">'='</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="keyword">return</span> <span class="string">'*'</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="keyword">return</span> <span class="string">'&'</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">outputmap</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">char</span> c2;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<mapx;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<mapx;j++){</span><br><span class="line">GoToxy(j,i);</span><br><span class="line">c=maps[i][j];</span><br><span class="line">c2=to_ch_map(c);</span><br><span class="line"><span class="keyword">if</span>(maps[i][j]==<span class="number">5</span>||maps[i][j]==<span class="number">7</span>){</span><br><span class="line">SetColor(RED);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,c2);</span><br><span class="line">SetColor(YELLOW);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">p1</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line"><span class="keyword">int</span> oops=ops;</span><br><span class="line"><span class="keyword">int</span> ox=<span class="number">1</span>,oy=<span class="number">1</span>,th;</span><br><span class="line">ox=x;oy=y;</span><br><span class="line">op=keyboard();</span><br><span class="line"><span class="keyword">switch</span>(op){</span><br><span class="line"><span class="keyword">case</span> <span class="string">'w'</span>:x--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:x++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'a'</span>:y--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'d'</span>:y++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(maps[x][y]!=<span class="number">0</span>&&maps[x][y]!=<span class="number">6</span>){</span><br><span class="line">x=ox;</span><br><span class="line">y=oy;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(oops==<span class="number">0</span>&&ops==<span class="number">0</span>) maps[ox][oy]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ops==<span class="number">0</span>) maps[x][y]=<span class="number">5</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">p2</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">char</span> op1;</span><br><span class="line"><span class="keyword">int</span> oops1=ops1;</span><br><span class="line"><span class="keyword">int</span> ox1=<span class="number">1</span>,oy1=<span class="number">1</span>,th1;</span><br><span class="line">ox1=x1;oy1=y1;</span><br><span class="line">op1=keyboard();</span><br><span class="line"><span class="keyword">switch</span>(op1){</span><br><span class="line"><span class="keyword">case</span> <span class="string">'i'</span>:x1--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'k'</span>:x1++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'j'</span>:y1--;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'l'</span>:y1++;ops=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(maps[x1][y1]!=<span class="number">0</span>&&maps[x1][y1]!=<span class="number">6</span>){</span><br><span class="line">x1=ox1;</span><br><span class="line">y1=oy1;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(oops1==<span class="number">0</span>&&ops1==<span class="number">0</span>) maps[ox1][oy1]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ops1==<span class="number">0</span>) maps[x1][y1]=<span class="number">7</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start</span><span class="params">()</span></span>{</span><br><span class="line">srand(time(<span class="number">0</span>));</span><br><span class="line"><span class="built_in">memset</span>(maps,rand(),<span class="keyword">sizeof</span>(maps));</span><br><span class="line"><span class="built_in">memset</span>(maps,<span class="number">0</span>,<span class="keyword">sizeof</span>(maps));</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">11</span>]=<span class="number">6</span>;</span><br><span class="line">maps[<span class="number">10</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">8</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">13</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">10</span>][mapx<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][mapx<span class="number">-2</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">8</span>][mapx<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">13</span>][mapx<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">10</span>]=<span class="number">2</span>;</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">12</span>]=<span class="number">2</span>;</span><br><span class="line">maps[<span class="number">10</span>][<span class="number">11</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=mapx<span class="number">-1</span>;i++){</span><br><span class="line">maps[<span class="number">1</span>][i]=<span class="number">2</span>;</span><br><span class="line">maps[i][<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<=mapx<span class="number">-1</span>;i++){</span><br><span class="line">maps[i][mapx<span class="number">-1</span>]=<span class="number">2</span>;</span><br><span class="line">maps[mapx<span class="number">-1</span>][i]=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">srand(time(<span class="number">0</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i<mapx<span class="number">-1</span>;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j<mapx<span class="number">-1</span>;j++){</span><br><span class="line"><span class="keyword">if</span>(j==<span class="number">11</span>||i==<span class="number">11</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">10</span>==<span class="number">0</span>) maps[i][j]==<span class="number">4</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">13</span>==<span class="number">0</span>) maps[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(rand()%<span class="number">75</span>==<span class="number">0</span>) maps[i][j]=<span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th1</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">while</span>(!stop){</span><br><span class="line">outputmap();</span><br><span class="line">}</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th2</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">while</span>(!stop){</span><br><span class="line">p2();</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">}</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">th3</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">while</span>(!stop){</span><br><span class="line">p1();</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">}</span><br><span class="line">clrscr();</span><br><span class="line">system(<span class="string">"color C4"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">window();</span><br><span class="line">start();</span><br><span class="line"><span class="function">thread <span class="title">t</span><span class="params">(&th1)</span></span>;</span><br><span class="line"><span class="function">thread <span class="title">t1</span><span class="params">(&th2)</span></span>;</span><br><span class="line"><span class="function">thread <span class="title">t3</span><span class="params">(&th3)</span></span>;</span><br><span class="line"><span class="keyword">while</span>(!stop){</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">5</span>&&maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">7</span>&&maps[<span class="number">11</span>][<span class="number">11</span>]!=<span class="number">6</span>){</span><br><span class="line">maps[<span class="number">11</span>][<span class="number">11</span>]=<span class="number">6</span>;</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"this block must be 6!!"</span><<<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]==<span class="number">5</span>){</span><br><span class="line">stop=!stop;</span><br><span class="line">clrscr();</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"color 07"</span>);</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"p1 WIN"</span><<<span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(maps[<span class="number">11</span>][<span class="number">11</span>]==<span class="number">7</span>){</span><br><span class="line">stop=!stop;</span><br><span class="line">clrscr();</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">system(<span class="string">"color 07"</span>);</span><br><span class="line"><span class="built_in">cout</span><<<span class="string">"p2 WIN"</span><<<span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;寒假里摸鱼的成果&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="其他" scheme="https://yuygfgg.ml/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
